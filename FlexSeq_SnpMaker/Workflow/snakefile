# Author: Darrian Talamantes
# Affiliation: University of Georgia
# How to Run: 

#     1: Ensure that the "Data" Directory is created with "Sequences" and "Refrence" subdirectories
#     2: Look at the SAMPLES list. Ensure Suffix looks like "_R1.fastq.gz" change to what you need
#     3: Run FastQC and MultiQC on all your samples and do a manual inspection before running this
#     4: This snakefile should make all other needed directories
#     5: Run with 
#         snakemake --cores X --use-conda -s snakefile 
#  input this code in the terminal
#  snakemake --cores 2 --use-conda

# This file will have all the rules to 

# 1 align my data to the genome
# 2 find snps


# Reads were quality checked before this and none have to be removed

import os


# =========================================================================================================
#     Load config file
# =========================================================================================================
configfile: "config.yaml"

# Config importing paths to directories 
samples_path = config["paths"]["samples_path"]
mapped_reads = config["paths"]["mapped_reads"]
vcfs = config["paths"]["vcfs"]
mpileup = config["paths"]["mpileup"]




# config importing files
genome = config["genome"]

# =================================================================================================
#   Making all Directories
# =================================================================================================

# Ensure all directories exist before Snakemake starts
for path in config["paths"].values():
    os.makedirs(path, exist_ok=True)

# =================================================================================================
#   List Variables
# =================================================================================================

# Listing Sample Files
(SAMPLES,) = glob_wildcards(samples_path + "{sample}_R1.fastq.gz")
SAMPLES = [os.path.basename(s) for s in SAMPLES]  # Remove any leading paths
print("Samples:", SAMPLES)

# =================================================================================================
#    Rules
# =================================================================================================

rule all:
    input:
        multiext(genome, ".amb", ".ann", ".bwt", ".pac", ".sa"),
        genome + ".fai",
        expand(mapped_reads + "/{sample}_sorted.bam", sample=SAMPLES),
        vcf= vcfs + "/all_Flexseq.vcf.gz"



# Align genome file
rule index_genome:
    params:
        algo=config["bwa"]["index"]
    input:
        genome=config["genome"]
    output:
        idx = multiext(genome, ".amb", ".ann", ".bwt", ".pac", ".sa"),
    conda:
        "Conda_Envs/BWA.yaml"
    shell:
        "bwa index -a {params.algo} {input}"

# Index the genome for sam tools
rule samtools_index:
    input:
        genome
    output:
        genome + ".fai",
    wrapper:
        "v2.6.0/bio/samtools/faidx"


#Rules to be included

include: "rules/01_alignment.smk"		    # step 1 - Aligning, sorting, removing duplicates from samples
include: "rules/02_snp_call.smk"            # Calls SNPS

