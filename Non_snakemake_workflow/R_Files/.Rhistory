ncol(resid(lm_model_alk))
nrow(resid(lm_model_alk))
length(resid(lm_model_alk))
nrow(phenotypes23_24)
#Removing batch effects and leaving only residuals.
lm_model_alk <- lm(ng.g ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Alkaloids_Res <- resid(lm_model_alk)
head(phenotypes23_24)
lm_model_CT_OG <- lm(Delta_CT_adj ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_OG_Res <- resid(lm_model_CT_OG)
lm_model_CT_adj <- lm(Delta_CT_adj ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_adj_Res <- resid(lm_model_CT_adj)
head(phenotypes23_24, 20)
#Removing batch effects and leaving only residuals.
lm_model_alk <- lm(ng.g ~ Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Alkaloids_Res <- resid(lm_model_alk)
lm_model_CT_OG <- lm(Delta_CT_adj ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_OG_Res <- resid(lm_model_CT_OG)
lm_model_CT_adj <- lm(Delta_CT_adj ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_adj_Res <- resid(lm_model_CT_adj)
head(phenotypes23_24,15)
View(phenotypes23_24)
# Removing data thats not star cross
list_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/310x314_list.txt")
list_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/312x314_list.txt")
list_star <- rbind(list_314x310, list_314x312)
list_star
list_star$V1 <- sub("_dupped.bam", "", list_star$V1)
head(list_star)
phenotype_Data <- phenotype_Data[phenotype_Data$ID %in% list_star, ]
View(phenotype_Data)
phenotype_Data <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/All_Data_Filtered/phenotype_data.txt", header = TRUE)
phenotype_Data$Delta_CT[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "314" & phenotype_Data$Data_Set != "315x320"), ]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Data_Set == "315x320"),]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Extraction_Date == "03/16/23"),]
all_Data_2024 <- read.csv("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/2024_Data/Final_2024_phenotype_data.csv", header = TRUE)
# Fixing naming conventions
phenotype_Data <- phenotype_Data %>%
rename(Delta_CT_adj = Delta_CT)
head(phenotype_Data)
# Removing data thats not star cross
list_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/310x314_list.txt")
list_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/312x314_list.txt")
list_star <- rbind(list_314x310, list_314x312)
list_star$V1 <- sub("_dupped.bam", "", list_star$V1)
head(list_star)
phenotype_Data[phenotype_Data$ID %in% list_star$V1, ]
phenotype_Data <- phenotype_Data[phenotype_Data$ID %in% list_star$V1, ]
# Loading in the data
# The two data sets you need are all_Data_2024 and phenotype_Data_2023
phenotype_Data <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/All_Data_Filtered/phenotype_data.txt", header = TRUE)
phenotype_Data$Delta_CT[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "314" & phenotype_Data$Data_Set != "315x320"), ]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Data_Set == "315x320"),]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Extraction_Date == "03/16/23"),]
all_Data_2024 <- read.csv("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/2024_Data/Final_2024_phenotype_data.csv", header = TRUE)
# Fixing naming conventions
phenotype_Data <- phenotype_Data %>%
rename(Delta_CT_adj = Delta_CT)
all_Data_2024 <- all_Data_2024 %>%
rename(ID = Treatment)
# Removing data thats not star cross
list_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/310x314_list.txt")
list_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/312x314_list.txt")
list_star <- rbind(list_314x310, list_314x312)
list_star$V1 <- sub("_dupped.bam", "", list_star$V1)
phenotype_Data <- phenotype_Data[phenotype_Data$ID %in% list_star$V1, ]
# Subsetting the data into separate chunks
allpehnotype_data_export_23 <- subset(phenotype_Data, select = c(ID,Delta_CT_adj,Delta_CT_OG,ng.g,Data_Set))
allpehnotype_data_export_23$Year <- "2023"
allpehnotype_data_export_24 <- subset(all_Data_2024, select = c(ID,Delta_CT_adj,Delta_CT_OG,ng.g,Data_Set))
allpehnotype_data_export_24$Year <- "2024"
head(allpehnotype_data_export_23)
head(allpehnotype_data_export_24)
View(all_Data_2024)
new_rows <- data.frame(V1 = c(301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320))
list_star <- rbind(list_314x310, list_314x312, new_rows)
View(list_star)
list_star$V1 <- sub("_dupped.bam", "", list_star$V1)
phenotype_Data <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/All_Data_Filtered/phenotype_data.txt", header = TRUE)
phenotype_Data$Delta_CT[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "314" & phenotype_Data$Data_Set != "315x320"), ]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Data_Set == "315x320"),]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Extraction_Date == "03/16/23"),]
all_Data_2024 <- read.csv("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/2024_Data/Final_2024_phenotype_data.csv", header = TRUE)
# Fixing naming conventions
phenotype_Data <- phenotype_Data %>%
rename(Delta_CT_adj = Delta_CT)
all_Data_2024 <- all_Data_2024 %>%
rename(ID = Treatment)
# Removing data thats not star cross
list_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/310x314_list.txt")
list_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/312x314_list.txt")
new_rows <- data.frame(V1 = c(301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320))
list_star <- rbind(list_314x310, list_314x312, new_rows)
list_star$V1 <- sub("_dupped.bam", "", list_star$V1)
phenotype_Data <- phenotype_Data[phenotype_Data$ID %in% list_star$V1, ]
# Subsetting the data into separate chunks
allpehnotype_data_export_23 <- subset(phenotype_Data, select = c(ID,Delta_CT_adj,Delta_CT_OG,ng.g,Data_Set))
allpehnotype_data_export_23$Year <- "2023"
allpehnotype_data_export_24 <- subset(all_Data_2024, select = c(ID,Delta_CT_adj,Delta_CT_OG,ng.g,Data_Set))
allpehnotype_data_export_24$Year <- "2024"
head(allpehnotype_data_export_23)
head(allpehnotype_data_export_24)
#Recombining the data into one large table
phenotypes23_24 <- rbind(allpehnotype_data_export_23,allpehnotype_data_export_24)
head(phenotypes23_24)
#Removing batch effects and leaving only residuals.
lm_model_alk <- lm(ng.g ~ Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Alkaloids_Res <- resid(lm_model_alk)
lm_model_CT_OG <- lm(Delta_CT_adj ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_OG_Res <- resid(lm_model_CT_OG)
lm_model_CT_adj <- lm(Delta_CT_adj ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_adj_Res <- resid(lm_model_CT_adj)
head(phenotypes23_24,15)
View(phenotypes23_24)
# Now that we have residuals we have to get avarages and export the data
Alkaloid_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(Alkaloids_Res_avg = mean(Alkaloids_Res, na.rm = TRUE))
View(Alkaloid_residuals_avaraged)
DeltaCT_adj_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(DeltaCT_adj_Res_avg = mean(Delta_CT_adj_Res, na.rm = TRUE))
DeltaCT_OG_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(DeltaCT_OG_Res_avg = mean(Delta_CT_OG_Res, na.rm = TRUE))
head(DeltaCT_OG_residuals_avaraged)
phenotypes23_24$ID <- sub("-", "_", phenotypes23_24$ID)
head(phenotypes23_24)
head(phenotypes23_24,20)
# Loading in the data
# The two data sets you need are all_Data_2024 and phenotype_Data_2023
phenotype_Data <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/All_Data_Filtered/phenotype_data.txt", header = TRUE)
phenotype_Data$Delta_CT[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "314" & phenotype_Data$Data_Set != "315x320"), ]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Data_Set == "315x320"),]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Extraction_Date == "03/16/23"),]
all_Data_2024 <- read.csv("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/2024_Data/Final_2024_phenotype_data.csv", header = TRUE)
# Fixing naming conventions
phenotype_Data <- phenotype_Data %>%
rename(Delta_CT_adj = Delta_CT)
all_Data_2024 <- all_Data_2024 %>%
rename(ID = Treatment)
# Removing data thats not star cross
list_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/310x314_list.txt")
list_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/312x314_list.txt")
new_rows <- data.frame(V1 = c(301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320))
list_star <- rbind(list_314x310, list_314x312, new_rows)
list_star$V1 <- sub("_dupped.bam", "", list_star$V1)
phenotype_Data <- phenotype_Data[phenotype_Data$ID %in% list_star$V1, ]
# Subsetting the data into separate chunks
allpehnotype_data_export_23 <- subset(phenotype_Data, select = c(ID,Delta_CT_adj,Delta_CT_OG,ng.g,Data_Set))
allpehnotype_data_export_23$Year <- "2023"
allpehnotype_data_export_24 <- subset(all_Data_2024, select = c(ID,Delta_CT_adj,Delta_CT_OG,ng.g,Data_Set))
allpehnotype_data_export_24$Year <- "2024"
head(allpehnotype_data_export_23)
head(allpehnotype_data_export_24)
#Recombining the data into one large table
phenotypes23_24 <- rbind(allpehnotype_data_export_23,allpehnotype_data_export_24)
phenotypes23_24$ID <- gsub("-", "_", phenotypes23_24$ID)
head(phenotypes23_24,15)
#Removing batch effects and leaving only residuals.
lm_model_alk <- lm(ng.g ~ Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Alkaloids_Res <- resid(lm_model_alk)
lm_model_CT_OG <- lm(Delta_CT_adj ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_OG_Res <- resid(lm_model_CT_OG)
lm_model_CT_adj <- lm(Delta_CT_adj ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_adj_Res <- resid(lm_model_CT_adj)
head(phenotypes23_24,15)
# Now that we have residuals we have to get avarages and export the data
Alkaloid_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(Alkaloids_Res_avg = mean(Alkaloids_Res, na.rm = TRUE))
DeltaCT_adj_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(DeltaCT_adj_Res_avg = mean(Delta_CT_adj_Res, na.rm = TRUE))
DeltaCT_OG_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(DeltaCT_OG_Res_avg = mean(Delta_CT_OG_Res, na.rm = TRUE))
head(DeltaCT_OG_residuals_avaraged)
head(DeltaCT_OG_residuals_avaraged, 20)
head(DeltaCT_OG_residuals_avaraged, 50)
head(DeltaCT_OG_residuals_avaraged, 30)
head(Alkaloid_residuals_avaraged)
head(Alkaloid_residuals_avaraged, 20)
# Now that we have residuals we have to get avarages and export the data
Alkaloid_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(Alkaloids_Res_avg = mean(Alkaloids_Res, na.rm = TRUE)) %>%
filter(!is.na(Alkaloids_Res_avg))
DeltaCT_adj_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(DeltaCT_adj_Res_avg = mean(Delta_CT_adj_Res, na.rm = TRUE)) %>%
filter(!is.na(DeltaCT_adj_Res_avg))
DeltaCT_OG_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(DeltaCT_OG_Res_avg = mean(Delta_CT_OG_Res, na.rm = TRUE)) %>%
filter(!is.na(DeltaCT_OG_Res_avg))
Residual_data_avg <- merge(Alkaloid_residuals_averaged,
DeltaCT_adj_residuals_averaged,
by = "ID")
Residual_data_avg <- merge(Residual_data_avg,
DeltaCT_OG_residuals_avaraged,
by = "ID")
Residual_data_avg <- merge(Alkaloid_residuals_averaged,
DeltaCT_adj_residuals_averaged,
by = "ID")
Residual_data_avg <- merge(Alkaloid_residuals_avaraged,
DeltaCT_adj_residuals_avaraged,
by = "ID")
Residual_data_avg <- merge(Residual_data_avg,
DeltaCT_OG_residuals_avaraged,
by = "ID")
head(Residual_data_avg)
nrow(Residual_data_avg)
nrow(Residual_data_avg)
head(Residual_data_avg, 15)
head(Residual_data_avg, 20)
head(Residual_data_avg, 30)
head(Residual_data_avg, 50)
View(Residual_data_avg)
write.table(Residual_data_avg, file = '/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_data_avg.txt', sep = '\t', row.names=FALSE)
head(phenotypes23_24,15)
lm_model_CT_OG <- lm(Delta_CT_OG ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_OG_Res <- resid(lm_model_CT_OG)
lm_model_CT_adj <- lm(Delta_CT_adj ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_adj_Res <- resid(lm_model_CT_adj)
head(phenotypes23_24,15)
##############################################
# Making  data with batch effects removed 10/22/24
##############################################
# Loading in the data
# The two data sets you need are all_Data_2024 and phenotype_Data_2023
phenotype_Data <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/All_Data_Filtered/phenotype_data.txt", header = TRUE)
phenotype_Data$Delta_CT[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "314" & phenotype_Data$Data_Set != "315x320"), ]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Data_Set == "315x320"),]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Extraction_Date == "03/16/23"),]
all_Data_2024 <- read.csv("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/2024_Data/Final_2024_phenotype_data.csv", header = TRUE)
# Fixing naming conventions
phenotype_Data <- phenotype_Data %>%
rename(Delta_CT_adj = Delta_CT)
all_Data_2024 <- all_Data_2024 %>%
rename(ID = Treatment)
# Removing data thats not star cross
list_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/310x314_list.txt")
list_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/312x314_list.txt")
new_rows <- data.frame(V1 = c(301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320))
list_star <- rbind(list_314x310, list_314x312, new_rows)
list_star$V1 <- sub("_dupped.bam", "", list_star$V1)
phenotype_Data <- phenotype_Data[phenotype_Data$ID %in% list_star$V1, ]
# Subsetting the data into separate chunks
allpehnotype_data_export_23 <- subset(phenotype_Data, select = c(ID,Delta_CT_adj,Delta_CT_OG,ng.g,Data_Set))
allpehnotype_data_export_23$Year <- "2023"
allpehnotype_data_export_24 <- subset(all_Data_2024, select = c(ID,Delta_CT_adj,Delta_CT_OG,ng.g,Data_Set))
allpehnotype_data_export_24$Year <- "2024"
head(allpehnotype_data_export_23)
head(allpehnotype_data_export_24)
#Recombining the data into one large table
phenotypes23_24 <- rbind(allpehnotype_data_export_23,allpehnotype_data_export_24)
phenotypes23_24$ID <- gsub("-", "_", phenotypes23_24$ID)
head(phenotypes23_24,15)
#Removing batch effects and leaving only residuals.
lm_model_alk <- lm(ng.g ~ Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Alkaloids_Res <- resid(lm_model_alk)
lm_model_CT_OG <- lm(Delta_CT_OG ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_OG_Res <- resid(lm_model_CT_OG)
lm_model_CT_adj <- lm(Delta_CT_adj ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_adj_Res <- resid(lm_model_CT_adj)
head(phenotypes23_24,15)
# Now that we have residuals we have to get avarages and export the data
Alkaloid_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(Alkaloids_Res_avg = mean(Alkaloids_Res, na.rm = TRUE)) %>%
filter(!is.na(Alkaloids_Res_avg))
DeltaCT_adj_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(DeltaCT_adj_Res_avg = mean(Delta_CT_adj_Res, na.rm = TRUE)) %>%
filter(!is.na(DeltaCT_adj_Res_avg))
DeltaCT_OG_residuals_avaraged <- phenotypes23_24 %>%
group_by(ID) %>%
summarise(DeltaCT_OG_Res_avg = mean(Delta_CT_OG_Res, na.rm = TRUE)) %>%
filter(!is.na(DeltaCT_OG_Res_avg))
Residual_data_avg <- merge(Alkaloid_residuals_avaraged,
DeltaCT_adj_residuals_avaraged,
by = "ID")
Residual_data_avg <- merge(Residual_data_avg,
DeltaCT_OG_residuals_avaraged,
by = "ID")
write.table(Residual_data_avg, file = '/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_data_avg.txt', sep = '\t', row.names=FALSE)
Residual_data_avg
head(Residual_data_avg)
# Graphs to look at the avraged residual data
ggplot(Residual_data_avg, aes(x = Alkaloids_Res_avg)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histogram of Values", x = "Value", y = "Frequency") +
theme_minimal()
ggplot(Residual_data_avg, aes(x = DeltaCT_adj_Res_avg)) +
geom_histogram(binwidth = 1, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Histogram of Values", x = "Value", y = "Frequency") +
theme_minimal()
ggplot(Residual_data_avg, aes(x = DeltaCT_adj_Res_avg)) +
geom_histogram(binwidth = .25, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Histogram of Values", x = "Value", y = "Frequency") +
theme_minimal()
ggplot(Residual_data_avg, aes(x = DeltaCT_OG_Res_avg)) +
geom_histogram(binwidth = 1000, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Histogram of Values", x = "Value", y = "Frequency") +
theme_minimal()
ggplot(Residual_data_avg, aes(x = DeltaCT_OG_Res_avg)) +
geom_histogram(binwidth = .25, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Histogram of Values", x = "Value", y = "Frequency") +
theme_minimal()
# Graphs to look at the avraged residual data
ggplot(Residual_data_avg, aes(x = Alkaloids_Res_avg)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Alkaloids", x = "Value", y = "Frequency") +
theme_bw()
ggplot(Residual_data_avg, aes(x = DeltaCT_adj_Res_avg)) +
geom_histogram(binwidth = .25, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Delta CT OG", x = "Value", y = "Frequency") +
theme_bw()
ggplot(Residual_data_avg, aes(x = DeltaCT_OG_Res_avg)) +
geom_histogram(binwidth = .25, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Delta CT OG", x = "Value", y = "Frequency") +
theme_bw()
library(gridExtra)
# Graphs to look at the avraged residual data
p1 <- ggplot(Residual_data_avg, aes(x = Alkaloids_Res_avg)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Alkaloids", x = "Value", y = "Frequency") +
theme_bw()
p2 <- ggplot(Residual_data_avg, aes(x = DeltaCT_adj_Res_avg)) +
geom_histogram(binwidth = .25, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Delta CT OG", x = "Value", y = "Frequency") +
theme_bw()
p3 <- ggplot(Residual_data_avg, aes(x = DeltaCT_OG_Res_avg)) +
geom_histogram(binwidth = .25, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Delta CT OG", x = "Value", y = "Frequency") +
theme_bw()
grid.arrange(p1, p2, p3, p4, ncol = 2, nrow = 2)
grid.arrange(p1, p2, p3, ncol = 2, nrow = 2)
### Manhattan Plot of DRT filtered genotypes with 2024 and 2023 residuals avraged****
MLM_DRT_Filters_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Tassel_Outputs/2024_only/MLM_DRT_filters_Phenotype_residuals_avaraged.txt"
MLM_DRT_Filters <- read.table(MLM_DRT_Filters_loc, header = TRUE, sep = '\t')
MLM_DRT_Filters$Chr<-gsub("SCAFFOLD_","",as.character(MLM_DRT_Filters$Chr))
MLM_DRT_Filters$Chr<- as.numeric(MLM_DRT_Filters$Chr)
MLM_DRT_Filters <- MLM_DRT_Filters[MLM_DRT_Filters$Trait == "Delta_CT_adj", ]
MLM_DRT_Filters <- MLM_DRT_Filters[-c(1), ]
Delta_Adj <- manhattan(MLM_DRT_Filters, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 5), main = "MLM on Delta CT Efficiency Adjusted",
col = c("blue", "red", "darkgrey", "purple"))
library(qqman)
### Manhattan Plot of DRT filtered genotypes with 2024 and 2023 residuals avraged****
MLM_DRT_Filters_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Tassel_Outputs/2024_only/MLM_DRT_filters_Phenotype_residuals_avaraged.txt"
MLM_DRT_Filters <- read.table(MLM_DRT_Filters_loc, header = TRUE, sep = '\t')
MLM_DRT_Filters$Chr<-gsub("SCAFFOLD_","",as.character(MLM_DRT_Filters$Chr))
MLM_DRT_Filters$Chr<- as.numeric(MLM_DRT_Filters$Chr)
MLM_DRT_Filters <- MLM_DRT_Filters[MLM_DRT_Filters$Trait == "Delta_CT_adj", ]
MLM_DRT_Filters <- MLM_DRT_Filters[-c(1), ]
Delta_Adj <- manhattan(MLM_DRT_Filters, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 5), main = "MLM on Delta CT Efficiency Adjusted",
col = c("blue", "red", "darkgrey", "purple"))
library(tidyverse)
library(edgebundleR)
library(igraph)
library(ggraph)
library(qqman)
library(patchwork)
### Manhattan Plot of DRT filtered genotypes with 2024 and 2023 residuals avraged****
MLM_DRT_Filters_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Tassel_Outputs/2024_only/MLM_DRT_filters_Phenotype_residuals_avaraged.txt"
MLM_DRT_Filters <- read.table(MLM_DRT_Filters_loc, header = TRUE, sep = '\t')
MLM_DRT_Filters$Chr<-gsub("SCAFFOLD_","",as.character(MLM_DRT_Filters$Chr))
MLM_DRT_Filters$Chr<- as.numeric(MLM_DRT_Filters$Chr)
MLM_DRT_Filters <- MLM_DRT_Filters[MLM_DRT_Filters$Trait == "Delta_CT_adj", ]
MLM_DRT_Filters <- MLM_DRT_Filters[-c(1), ]
Delta_Adj <- manhattan(MLM_DRT_Filters, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 5), main = "MLM on Delta CT Efficiency Adjusted",
col = c("blue", "red", "darkgrey", "purple"))
View(MLM_DRT_Filters)
### Manhattan Plot of DRT filtered genotypes with 2024 and 2023 residuals avraged****
MLM_DRT_Filters_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Tassel_Outputs/2024_only/MLM_DRT_filters_Phenotype_residuals_avaraged.txt"
MLM_DRT_Filters <- read.table(MLM_DRT_Filters_loc, header = TRUE, sep = '\t')
### Manhattan Plot of DRT filtered genotypes with 2024 and 2023 residuals avraged****
MLM_DRT_Filters_residuals_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Tassel_Outputs/2024_only/MLM_DRT_filters_Phenotype_residuals_avaraged.txt"
MLM_DRT_Filters_residuals <- read.table(MLM_DRT_Filters_residuals_loc, header = TRUE, sep = '\t')
MLM_DRT_Filters_residuals$Chr<-gsub("SCAFFOLD_","",as.character(MLM_DRT_Filters_residuals$Chr))
MLM_DRT_Filters_residuals$Chr<- as.numeric(MLM_DRT_Filters_residuals$Chr)
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[MLM_DRT_Filters_residuals$Trait == "Delta_CT_adj", ]
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[-c(1), ]
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 5), main = "MLM on Delta CT Efficiency Adjusted",
col = c("blue", "red", "darkgrey", "purple"))
MLM_DRT_Filters_residuals <- read.table(MLM_DRT_Filters_residuals_loc, header = TRUE, sep = '\t')
MLM_DRT_Filters_residuals$Chr<-gsub("SCAFFOLD_","",as.character(MLM_DRT_Filters_residuals$Chr))
MLM_DRT_Filters_residuals$Chr<- as.numeric(MLM_DRT_Filters_residuals$Chr)
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[MLM_DRT_Filters_residuals$Trait == "Delta_CT_adj", ]
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[-c(1), ]
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 5), main = "MLM on Delta CT Efficiency Adjusted",
col = c("blue", "red", "darkgrey", "purple"))
View(MLM_DRT_Filters_residuals)
### Manhattan Plot of DRT filtered genotypes with 2024 and 2023 residuals avraged****
MLM_DRT_Filters_residuals_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Tassel_Outputs/2024_only/MLM_DRT_filters_Phenotype_residuals_avaraged.txt"
MLM_DRT_Filters_residuals <- read.table(MLM_DRT_Filters_residuals_loc, header = TRUE, sep = '\t')
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[MLM_DRT_Filters_residuals$Trait == "Alkaloids_Res_avg", ]
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[-c(1), ]
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 5), main = "MLM on Delta CT Efficiency Adjusted",
col = c("blue", "red", "darkgrey", "purple"))
### Manhattan Plot of DRT filtered genotypes with 2024 and 2023 residuals avraged****
MLM_DRT_Filters_residuals_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Tassel_Outputs/2024_only/MLM_DRT_filters_Phenotype_residuals_avaraged.txt"
MLM_DRT_Filters_residuals <- read.table(MLM_DRT_Filters_residuals_loc, header = TRUE, sep = '\t')
MLM_DRT_Filters_residuals$Chr<-gsub("SCAFFOLD_","",as.character(MLM_DRT_Filters_residuals$Chr))
MLM_DRT_Filters_residuals$Chr<- as.numeric(MLM_DRT_Filters_residuals$Chr)
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[MLM_DRT_Filters_residuals$Trait == "Alkaloids_Res_avg", ]
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[-c(1), ]
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 5), main = "MLM on Delta CT Efficiency Adjusted",
col = c("blue", "red", "darkgrey", "purple"))
### Manhattan Plot of DRT filtered genotypes with 2024 and 2023 residuals avraged****
MLM_DRT_Filters_residuals_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Tassel_Outputs/2024_only/MLM_DRT_filters_Phenotype_residuals_avaraged.txt"
MLM_DRT_Filters_residuals <- read.table(MLM_DRT_Filters_residuals_loc, header = TRUE, sep = '\t')
MLM_DRT_Filters_residuals$Chr<-gsub("SCAFFOLD_","",as.character(MLM_DRT_Filters_residuals$Chr))
MLM_DRT_Filters_residuals$Chr<- as.numeric(MLM_DRT_Filters_residuals$Chr)
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[MLM_DRT_Filters_residuals$Trait == "Alkaloids_Res_avg", ]
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[-c(1), ]
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 5), main = "MLM on Alkaloid Residuals Avaraged From 2023 and 2024",
col = c("blue", "red", "darkgrey", "purple"))
### Manhattan Plot of DRT filtered genotypes with 2024 and 2023 residuals avraged****
MLM_DRT_Filters_residuals_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Tassel_Outputs/2024_only/MLM_DRT_filters_Phenotype_residuals_avaraged.txt"
MLM_DRT_Filters_residuals <- read.table(MLM_DRT_Filters_residuals_loc, header = TRUE, sep = '\t')
MLM_DRT_Filters_residuals$Chr<-gsub("SCAFFOLD_","",as.character(MLM_DRT_Filters_residuals$Chr))
MLM_DRT_Filters_residuals$Chr<- as.numeric(MLM_DRT_Filters_residuals$Chr)
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[MLM_DRT_Filters_residuals$Trait == "DeltaCT_adj_Res_avg", ]
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[-c(1), ]
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 5), main = "MLM on Delta CT Efficiency Adjusted Residuals Avaraged From 2023 and 2024",
col = c("blue", "red", "darkgrey", "purple"))
alpha <- 0.05
num_tests <- nrow(MLM_DRT_Filters_residuals)  # Number of SNPs or tests
bonferroni_threshold <- alpha / num_tests
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 5), main = "MLM on Delta CT Efficiency Adjusted Residuals Avaraged From 2023 and 2024",
genomewideline = -log10(bonferroni_threshold),
col = c("blue", "red", "darkgrey", "purple"))
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 5), main = "MLM on Delta CT Efficiency Adjusted Residuals Avaraged From 2023 and 2024",
genomewideline = -log10(bonferroni_threshold),
col = c("blue", "red", "darkgrey", "purple"))
-log10(bonferroni_threshold)
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 9), main = "MLM on Delta CT Efficiency Adjusted Residuals Avaraged From 2023 and 2024",
genomewideline = -log10(bonferroni_threshold),
col = c("blue", "red", "darkgrey", "purple"))
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 6), main = "MLM on Delta CT Efficiency Adjusted Residuals Avaraged From 2023 and 2024",
genomewideline = -log10(bonferroni_threshold),
col = c("blue", "red", "darkgrey", "purple"))
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 6), main = "MLM on Delta CT Efficiency Adjusted Residuals Avaraged From 2023 and 2024",
col = c("blue", "red", "darkgrey", "purple"))
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 6), main = "MLM on Delta CT Efficiency Adjusted Residuals Avaraged From 2023 and 2024",
genomewideline = -log10(bonferroni_threshold),
col = c("blue", "red", "darkgrey", "purple"))
### Manhattan Plot of DRT filtered genotypes with 2024 and 2023 residuals avraged****
MLM_DRT_Filters_residuals_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Tassel_Outputs/2024_only/MLM_DRT_filters_Phenotype_residuals_avaraged.txt"
MLM_DRT_Filters_residuals <- read.table(MLM_DRT_Filters_residuals_loc, header = TRUE, sep = '\t')
MLM_DRT_Filters_residuals$Chr<-gsub("SCAFFOLD_","",as.character(MLM_DRT_Filters_residuals$Chr))
MLM_DRT_Filters_residuals$Chr<- as.numeric(MLM_DRT_Filters_residuals$Chr)
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[MLM_DRT_Filters_residuals$Trait == "Alkaloids_Res_avg", ]
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[-c(1), ]
alpha <- 0.05
num_tests <- nrow(MLM_DRT_Filters_residuals)  # Number of SNPs or tests
bonferroni_threshold <- alpha / num_tests
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 6), main = "MLM on Alkaloid Residuals Avaraged From 2023 and 2024",
genomewideline = -log10(bonferroni_threshold),
col = c("blue", "red", "darkgrey", "purple"))
### Manhattan Plot of DRT filtered genotypes with 2024 and 2023 residuals avraged****
MLM_DRT_Filters_residuals_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Tassel_Outputs/2024_only/MLM_DRT_filters_Phenotype_residuals_avaraged.txt"
MLM_DRT_Filters_residuals <- read.table(MLM_DRT_Filters_residuals_loc, header = TRUE, sep = '\t')
MLM_DRT_Filters_residuals$Chr<-gsub("SCAFFOLD_","",as.character(MLM_DRT_Filters_residuals$Chr))
MLM_DRT_Filters_residuals$Chr<- as.numeric(MLM_DRT_Filters_residuals$Chr)
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[MLM_DRT_Filters_residuals$Trait == "DeltaCT_adj_Res_avg", ]
MLM_DRT_Filters_residuals <- MLM_DRT_Filters_residuals[-c(1), ]
alpha <- 0.05
num_tests <- nrow(MLM_DRT_Filters_residuals)  # Number of SNPs or tests
bonferroni_threshold <- alpha / num_tests
Delta_Adj <- manhattan(MLM_DRT_Filters_residuals, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
ylim = c(0, 6), main = "MLM on Delta CT Efficiency Adjusted Residuals Avaraged From 2023 and 2024",
genomewideline = -log10(bonferroni_threshold),
col = c("blue", "red", "darkgrey", "purple"))
