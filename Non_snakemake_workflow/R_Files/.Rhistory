scale_color_manual(values = c("purple", "red", "blue", "black"),
labels = c("purple" = "Both",
"red" = "Removed in Alkaloids",
"blue" = "Removed in CT",
"black" = "Not Removed")) +
labs(title = paste0("PCA Plot Colored by Removed Individuals by Phenotype" ), x = "PC1", y = "PC2") +
theme_bw()
#Create plot that shows removed individuals
pca_df_4$Source <- factor(pca_df_4$Source, levels = c("Both", "Removed in Alkaloids", "Removed in CT", "Not Removed"))
ggplot(pca_df_4, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Source), size = 4, alpha = 0.75) + # Color based on N
scale_color_manual(values = c("purple", "red", "blue", "black"),
labels = c("Both" = "Both",
"Removed in Alkaloids" = "Removed in Alkaloids",
"Removed in CT" = "Removed in CT",
"Not Removed" = "Not Removed")) +
labs(title = paste0("PCA Plot Colored by Removed Individuals by Phenotype" ), x = "PC1", y = "PC2") +
theme_bw()
ggplot(pca_df_4, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Source), size = 4, alpha = 0.75) + # Color based on N
scale_color_manual(values = c("purple", "red", "blue", "black"),
labels = c("Removed in Both", "Removed in Alkaloids", "Removed in CT", "Not Removed")) +
labs(title = paste0("PCA Plot Colored by Removed Individuals by Phenotype" ), x = "PC1", y = "PC2") +
theme_bw()
# PCA graphic showing individuals removed from both alkaloids and CT
# Combine the IDs from both datasets
combined_ids <- data.frame(ID = unique(c(NHI_data_alk$x, NHI_data_ct$x)))
# Check where each ID appears
combined_ids$Source <- ifelse(
combined_ids$ID %in% NHI_data_alk$x & combined_ids$ID %in% NHI_data_ct$x, "Both",
ifelse(combined_ids$ID %in% NHI_data_alk$x, "NHI_data_alk", "NHI_data_ct")
)
pca_df_4 <- merge(pca_df,combined_ids, by.x = "Row.names", by.y = "ID", all = TRUE )
pca_df_4$Source[is.na(pca_df_4$Source)] <- "Not_Removed"
ggplot(pca_df_4, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Source), size = 4, alpha = 0.75) + # Color based on N
scale_color_manual(values = c("purple", "red", "blue", "black"),
labels = c("Removed in Both", "Removed in Alkaloids", "Removed in CT", "Not Removed")) +
labs(title = paste0("PCA Plot Colored by Removed Individuals by Phenotype" ), x = "PC1", y = "PC2") +
theme_bw()
################## Heatmap and PCA Analysis Function ###########################
base_kin_analysis <- function(pheno_data, geno_matrix, cross_list, title, removed_data_alk, removed_data_ct) {
# Ensure both datasets have the same IDs
common_IDs <- intersect(pheno_data$ID, rownames(geno_matrix))
# Subset data to include only common IDs
pheno_data <- pheno_data[pheno_data$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == pheno_data$ID)) {
stop("Row names of geno_data do not match the ID in pheno_data.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
geno_data <- geno_data %>% mutate_all(convert_genotypes)
# Convert geno_data back to matrix for kinship matrix calculation
geno_data <- as.matrix(geno_data)
# Create kinship matrix using Gmatrix function
kinship_matrix <- Gmatrix(SNPmatrix = geno_data, method = "VanRaden")
pca_result <- prcomp(kinship_matrix)
diag(kinship_matrix) <- NA
kin_heatmap <- pheatmap(kinship_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
color = colorRampPalette(c("blue", "white", "red"))(50),
main = paste0("Kinship Matrix Heatmap ", title))
# Perform PCA on the kinship matrix (or SNP matrix if needed)
pca_scores <- pca_result$x  # Principal component scores
explained_variance <- pca_result$sdev^2 / sum(pca_result$sdev^2)
pca_df <- data.frame(PC1 = pca_scores[, 1], PC2 = pca_scores[, 2])
pca_df <-merge(pca_df, cross_list, by.x = "row.names", by.y = "V1" )
pca_df <- pca_df %>% rename(Cross = V2)
# Create the scatter plot of PC1 vs PC2
kin_pca <- ggplot(pca_df, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Cross), size = 3, alpha = 0.3) +  # Plot the points
geom_text(
data = subset(pca_df, grepl("parent", Cross, ignore.case = TRUE)),  # Filter for "parent"
aes(label = Row.names),
vjust = -1,  # Adjust text position
size = 3,
color = "black"
) +
labs(title = paste0("PCA:", title), x = "PC1", y = "PC2") +
theme_minimal()
# PCA of data being removed
data_path <- "../../Data/Heritability_Outputs/"
number_heri_alk <- read.csv(paste0(data_path, removed_data_alk, "_data_1.csv"), header = TRUE)
indviduals_removed_alk <- read.csv(paste0(data_path, removed_data_alk, "_data_2.csv"), header = TRUE)
number_heri_ct <- read.csv(paste0(data_path, removed_data_ct, "_data_1.csv"), header = TRUE)
indviduals_removed_ct <- read.csv(paste0(data_path, removed_data_ct, "_data_2.csv"), header = TRUE)
NHI_data_alk <- cbind(number_heri_alk, indviduals_removed_alk)
NHI_data_ct <- cbind(number_heri_ct, indviduals_removed_ct)
pca_df_2 <- merge(pca_df,NHI_data_alk, by.x = "Row.names", by.y = "x", all = TRUE )
pca_df_2$color <- ifelse(is.na(pca_df_2$N), "black", "purple")
#Create plot that shows removed individuals
removed_data_pca <- ggplot(pca_df_2, aes(x = PC1, y = PC2)) +
geom_point(aes(color = color), size = 3) + # Color based on N
scale_color_manual(values = c("black", "purple"),
labels = c("black" = "Stayed", "purple" = "Removed")) + # Set color scheme
geom_text(aes(label = ifelse(!is.na(N), N, "")), vjust = -1, size = 3) + # Add N value above points
labs(title = paste0("PCA Plot Colored by Removed Individuals ", "Alkaloids" ), x = "PC1", y = "PC2") +
theme_minimal()
# PCA graphic showing individuals removed from both alkaloids and CT
# Combine the IDs from both datasets
combined_ids <- data.frame(ID = unique(c(NHI_data_alk$x, NHI_data_ct$x)))
# Check where each ID appears
combined_ids$Source <- ifelse(
combined_ids$ID %in% NHI_data_alk$x & combined_ids$ID %in% NHI_data_ct$x, "Both",
ifelse(combined_ids$ID %in% NHI_data_alk$x, "NHI_data_alk", "NHI_data_ct")
)
#Create plot that shows removed individuals
removed_data_by_pheno <- ggplot(pca_df_4, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Source), size = 4, alpha = 0.75) + # Color based on N
scale_color_manual(values = c("purple", "red", "blue", "black"),
labels = c("Removed in Both", "Removed in Alkaloids", "Removed in CT", "Not Removed")) +
labs(title = paste0("PCA Plot Colored by Removed Individuals by Phenotype" ), x = "PC1", y = "PC2") +
theme_bw()
# return plot list
return(list(plot1 = kin_heatmap, plot2 = kin_pca, plot3 = removed_data_pca, plot4 <- removed_data_by_pheno))
}
plots_star_avg <- base_kin_analysis(Residual_data_avg_outliars_rm, geno_matrix, cross_list, title = "Star Cross Years Avraged", removed_data_alk = "plot_avg_star_alk", removed_data_ct = "plot_avg_star_ct")
plots_star_avg$plot3
################## Heatmap and PCA Analysis Function ###########################
base_kin_analysis <- function(pheno_data, geno_matrix, cross_list, title, removed_data_alk, removed_data_ct) {
# Ensure both datasets have the same IDs
common_IDs <- intersect(pheno_data$ID, rownames(geno_matrix))
# Subset data to include only common IDs
pheno_data <- pheno_data[pheno_data$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == pheno_data$ID)) {
stop("Row names of geno_data do not match the ID in pheno_data.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
geno_data <- geno_data %>% mutate_all(convert_genotypes)
# Convert geno_data back to matrix for kinship matrix calculation
geno_data <- as.matrix(geno_data)
# Create kinship matrix using Gmatrix function
kinship_matrix <- Gmatrix(SNPmatrix = geno_data, method = "VanRaden")
pca_result <- prcomp(kinship_matrix)
diag(kinship_matrix) <- NA
kin_heatmap <- pheatmap(kinship_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
color = colorRampPalette(c("blue", "white", "red"))(50),
main = paste0("Kinship Matrix Heatmap ", title))
# Perform PCA on the kinship matrix (or SNP matrix if needed)
pca_scores <- pca_result$x  # Principal component scores
explained_variance <- pca_result$sdev^2 / sum(pca_result$sdev^2)
pca_df <- data.frame(PC1 = pca_scores[, 1], PC2 = pca_scores[, 2])
pca_df <-merge(pca_df, cross_list, by.x = "row.names", by.y = "V1" )
pca_df <- pca_df %>% rename(Cross = V2)
# Create the scatter plot of PC1 vs PC2
kin_pca <- ggplot(pca_df, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Cross), size = 3, alpha = 0.3) +  # Plot the points
geom_text(
data = subset(pca_df, grepl("parent", Cross, ignore.case = TRUE)),  # Filter for "parent"
aes(label = Row.names),
vjust = -1,  # Adjust text position
size = 3,
color = "black"
) +
labs(title = paste0("PCA:", title), x = "PC1", y = "PC2") +
theme_minimal()
# PCA of data being removed
data_path <- "../../Data/Heritability_Outputs/"
number_heri_alk <- read.csv(paste0(data_path, removed_data_alk, "_data_1.csv"), header = TRUE)
indviduals_removed_alk <- read.csv(paste0(data_path, removed_data_alk, "_data_2.csv"), header = TRUE)
number_heri_ct <- read.csv(paste0(data_path, removed_data_ct, "_data_1.csv"), header = TRUE)
indviduals_removed_ct <- read.csv(paste0(data_path, removed_data_ct, "_data_2.csv"), header = TRUE)
NHI_data_alk <- cbind(number_heri_alk, indviduals_removed_alk)
NHI_data_ct <- cbind(number_heri_ct, indviduals_removed_ct)
pca_df_2 <- merge(pca_df,NHI_data_alk, by.x = "Row.names", by.y = "x", all = TRUE )
pca_df_2$color <- ifelse(is.na(pca_df_2$N), "black", "purple")
#Create plot that shows removed individuals
removed_data_pca <- ggplot(pca_df_2, aes(x = PC1, y = PC2)) +
geom_point(aes(color = color), size = 3) + # Color based on N
scale_color_manual(values = c("black", "purple"),
labels = c("black" = "Stayed", "purple" = "Removed")) + # Set color scheme
geom_text(aes(label = ifelse(!is.na(N), N, "")), vjust = -1, size = 3) + # Add N value above points
labs(title = paste0("PCA Plot Colored by Removed Individuals ", "Alkaloids" ), x = "PC1", y = "PC2") +
theme_minimal()
# PCA graphic showing individuals removed from both alkaloids and CT
# Combine the IDs from both datasets
combined_ids <- data.frame(ID = unique(c(NHI_data_alk$x, NHI_data_ct$x)))
# Check where each ID appears
combined_ids$Source <- ifelse(
combined_ids$ID %in% NHI_data_alk$x & combined_ids$ID %in% NHI_data_ct$x, "Both",
ifelse(combined_ids$ID %in% NHI_data_alk$x, "NHI_data_alk", "NHI_data_ct")
)
pca_df_4 <- merge(pca_df,combined_ids, by.x = "Row.names", by.y = "ID", all = TRUE )
pca_df_4$Source[is.na(pca_df_4$Source)] <- "Not_Removed"
#Create plot that shows removed individuals
removed_data_by_pheno <- ggplot(pca_df_4, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Source), size = 4, alpha = 0.75) + # Color based on N
scale_color_manual(values = c("purple", "red", "blue", "black"),
labels = c("Removed in Both", "Removed in Alkaloids", "Removed in CT", "Not Removed")) +
labs(title = paste0("PCA Plot Colored by Removed Individuals by Phenotype" ), x = "PC1", y = "PC2") +
theme_bw()
# return plot list
return(list(plot1 = kin_heatmap, plot2 = kin_pca, plot3 = removed_data_pca, plot4 <- removed_data_by_pheno))
}
plots_star_avg <- base_kin_analysis(Residual_data_avg_outliars_rm, geno_matrix, cross_list, title = "Star Cross Years Avraged", removed_data_alk = "plot_avg_star_alk", removed_data_ct = "plot_avg_star_ct")
plots_star_avg$
d
################## Heatmap and PCA Analysis Function ###########################
base_kin_analysis <- function(pheno_data, geno_matrix, cross_list, title, removed_data_alk, removed_data_ct) {
# Ensure both datasets have the same IDs
common_IDs <- intersect(pheno_data$ID, rownames(geno_matrix))
# Subset data to include only common IDs
pheno_data <- pheno_data[pheno_data$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == pheno_data$ID)) {
stop("Row names of geno_data do not match the ID in pheno_data.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
geno_data <- geno_data %>% mutate_all(convert_genotypes)
# Convert geno_data back to matrix for kinship matrix calculation
geno_data <- as.matrix(geno_data)
# Create kinship matrix using Gmatrix function
kinship_matrix <- Gmatrix(SNPmatrix = geno_data, method = "VanRaden")
pca_result <- prcomp(kinship_matrix)
diag(kinship_matrix) <- NA
kin_heatmap <- pheatmap(kinship_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
color = colorRampPalette(c("blue", "white", "red"))(50),
main = paste0("Kinship Matrix Heatmap ", title))
# Perform PCA on the kinship matrix (or SNP matrix if needed)
pca_scores <- pca_result$x  # Principal component scores
explained_variance <- pca_result$sdev^2 / sum(pca_result$sdev^2)
pca_df <- data.frame(PC1 = pca_scores[, 1], PC2 = pca_scores[, 2])
pca_df <-merge(pca_df, cross_list, by.x = "row.names", by.y = "V1" )
pca_df <- pca_df %>% rename(Cross = V2)
# Create the scatter plot of PC1 vs PC2
kin_pca <- ggplot(pca_df, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Cross), size = 3, alpha = 0.3) +  # Plot the points
geom_text(
data = subset(pca_df, grepl("parent", Cross, ignore.case = TRUE)),  # Filter for "parent"
aes(label = Row.names),
vjust = -1,  # Adjust text position
size = 3,
color = "black"
) +
labs(title = paste0("PCA:", title), x = "PC1", y = "PC2") +
theme_minimal()
# PCA of data being removed
data_path <- "../../Data/Heritability_Outputs/"
number_heri_alk <- read.csv(paste0(data_path, removed_data_alk, "_data_1.csv"), header = TRUE)
indviduals_removed_alk <- read.csv(paste0(data_path, removed_data_alk, "_data_2.csv"), header = TRUE)
number_heri_ct <- read.csv(paste0(data_path, removed_data_ct, "_data_1.csv"), header = TRUE)
indviduals_removed_ct <- read.csv(paste0(data_path, removed_data_ct, "_data_2.csv"), header = TRUE)
NHI_data_alk <- cbind(number_heri_alk, indviduals_removed_alk)
NHI_data_ct <- cbind(number_heri_ct, indviduals_removed_ct)
pca_df_2 <- merge(pca_df,NHI_data_alk, by.x = "Row.names", by.y = "x", all = TRUE )
pca_df_2$color <- ifelse(is.na(pca_df_2$N), "black", "purple")
#Create plot that shows removed individuals
removed_data_pca <- ggplot(pca_df_2, aes(x = PC1, y = PC2)) +
geom_point(aes(color = color), size = 3) + # Color based on N
scale_color_manual(values = c("black", "purple"),
labels = c("black" = "Stayed", "purple" = "Removed")) + # Set color scheme
geom_text(aes(label = ifelse(!is.na(N), N, "")), vjust = -1, size = 3) + # Add N value above points
labs(title = paste0("PCA Plot Colored by Removed Individuals ", "Alkaloids" ), x = "PC1", y = "PC2") +
theme_minimal()
# PCA graphic showing individuals removed from both alkaloids and CT
# Combine the IDs from both datasets
combined_ids <- data.frame(ID = unique(c(NHI_data_alk$x, NHI_data_ct$x)))
# Check where each ID appears
combined_ids$Source <- ifelse(
combined_ids$ID %in% NHI_data_alk$x & combined_ids$ID %in% NHI_data_ct$x, "Both",
ifelse(combined_ids$ID %in% NHI_data_alk$x, "NHI_data_alk", "NHI_data_ct")
)
pca_df_4 <- merge(pca_df,combined_ids, by.x = "Row.names", by.y = "ID", all = TRUE )
pca_df_4$Source[is.na(pca_df_4$Source)] <- "Not_Removed"
#Create plot that shows removed individuals
removed_data_by_pheno <- ggplot(pca_df_4, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Source), size = 4, alpha = 0.75) + # Color based on N
scale_color_manual(values = c("purple", "red", "blue", "black"),
labels = c("Removed in Both", "Removed in Alkaloids", "Removed in CT", "Not Removed")) +
labs(title = paste0("PCA Plot Colored by Removed Individuals by Phenotype" ), x = "PC1", y = "PC2") +
theme_bw()
# return plot list
return(list(plot1 = kin_heatmap, plot2 = kin_pca, plot3 = removed_data_pca, plot4 = removed_data_by_pheno))
}
plots_star_avg <- base_kin_analysis(Residual_data_avg_outliars_rm, geno_matrix, cross_list, title = "Star Cross Years Avraged", removed_data_alk = "plot_avg_star_alk", removed_data_ct = "plot_avg_star_ct")
plots_star_avg$plot4
plots_star_avg$plot3
plots_star_avg$plot2
plots_star_23 <- base_kin_analysis(Residual_Data_23_outliars_rm, geno_matrix, cross_list, title = "Star Cross 2023", removed_data_alk = "plot_2023_star_alk", removed_data_ct = "plot_2023_star_ct")
plots_314x310_23 <- base_kin_analysis(Residual_Data_23_outliars_rm_314x310, geno_matrix, cross_list, title = "314x310 2023", removed_data_alk = "plot_2023_310_alk", removed_data_ct = "plot_2023_310_ct")
plots_314x312_23 <- base_kin_analysis(Residual_Data_23_outliars_rm_314x312, geno_matrix, cross_list, title = "314x312 2023",removed_data_alk = "plot_2023_312_alk", removed_data_ct = "plot_2023_312_ct")
plots_star_24 <- base_kin_analysis(Residual_Data_24_outliars_rm, geno_matrix, cross_list, title = "Star Cross 2024", removed_data_alk = "plot_2024_star_alk", removed_data_ct = "plot_2024_star_ct")
plots_314x310_24 <- base_kin_analysis(Residual_Data_24_outliars_rm_314x310, geno_matrix, cross_list, title = "314x310 2024", removed_data_alk = "plot_2024_310_alk", removed_data_ct = "plot_2024_310_ct")
plots_314x312_24 <- base_kin_analysis(Residual_Data_24_outliars_rm_314x312, geno_matrix, cross_list, title = "314x312 2024",removed_data_alk = "plot_2024_312_alk", removed_data_ct = "plot_2024_312_ct")
plots_star_avg <- base_kin_analysis(Residual_data_avg_outliars_rm, geno_matrix, cross_list, title = "Star Cross Years Avraged", removed_data_alk = "plot_avg_star_alk", removed_data_ct = "plot_avg_star_ct")
plots_314x310_avg <- base_kin_analysis(Residual_data_avg_outliars_rm_314x310, geno_matrix, cross_list, title = "314x310 Years Avraged", removed_data_alk = "plot_avg_310_alk", removed_data_ct = "plot_avg_310_ct")
plots_314x312_avg <- base_kin_analysis(Residual_data_avg_outliars_rm_314x312, geno_matrix, cross_list, title = "314x312 Years Avraged", removed_data_alk = "plot_avg_312_alk", removed_data_ct = "plot_avg_312_ct")
plots_star_avg$plot1
plots_star_avg$plot2
plots_star_avg$plot3
plots_star_avg$plot4
plots_star_avg$plot1
plots_star_avg$plot1
plots_star_avg$plot1
plots_star_avg$plot2
plots_star_avg$plot1
grid.arrange(plots_star_avg$plot1, plots_star_avg$plot2, plots_star_avg$plot3, plots_star_avg$plot4, ncol = 2)
rlang::last_trace()
plots_star_avg$plot1
grid.arrange(plots_star_avg$plot1, plots_star_avg$plot2, plots_star_avg$plot3, plots_star_avg$plot4, ncol = 2, nrow = 2)
grid.arrange(plots_star_avg$plot1, plots_star_avg$plot2, plots_star_avg$plot3, plots_star_avg$plot4, ncol = 2, nrow = 2)
plots_star_avg$plot4
plot1 <- plots_star_avg$plot1
plot2 <- plots_star_avg$plot2
plot3 <- plots_star_avg$plot3
plot4 <- plots_star_avg$plot4
plot1 <- plots_star_avg$plot1
plot2 <- plots_star_avg$plot2
plot3 <- plots_star_avg$plot3
plot4 <- plots_star_avg$plot4
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2, nrow = 2)
grid.arrange(plot2, plot3, plot4, ncol = 2, nrow = 2)
################## Heatmap and PCA Analysis Function ###########################
base_kin_analysis <- function(pheno_data, geno_matrix, cross_list, title, removed_data_alk, removed_data_ct) {
# Ensure both datasets have the same IDs
common_IDs <- intersect(pheno_data$ID, rownames(geno_matrix))
# Subset data to include only common IDs
pheno_data <- pheno_data[pheno_data$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == pheno_data$ID)) {
stop("Row names of geno_data do not match the ID in pheno_data.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
geno_data <- geno_data %>% mutate_all(convert_genotypes)
# Convert geno_data back to matrix for kinship matrix calculation
geno_data <- as.matrix(geno_data)
# Create kinship matrix using Gmatrix function
kinship_matrix <- Gmatrix(SNPmatrix = geno_data, method = "VanRaden")
pca_result <- prcomp(kinship_matrix)
diag(kinship_matrix) <- NA
kin_heatmap <- pheatmap(kinship_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
color = colorRampPalette(c("blue", "white", "red"))(50),
main = paste0("Kinship Matrix Heatmap ", title))
# Perform PCA on the kinship matrix (or SNP matrix if needed)
pca_scores <- pca_result$x  # Principal component scores
explained_variance <- pca_result$sdev^2 / sum(pca_result$sdev^2)
pca_df <- data.frame(PC1 = pca_scores[, 1], PC2 = pca_scores[, 2])
pca_df <-merge(pca_df, cross_list, by.x = "row.names", by.y = "V1" )
pca_df <- pca_df %>% rename(Cross = V2)
# Create the scatter plot of PC1 vs PC2
kin_pca <- ggplot(pca_df, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Cross), size = 3, alpha = 0.3) +  # Plot the points
geom_text(
data = subset(pca_df, grepl("parent", Cross, ignore.case = TRUE)),  # Filter for "parent"
aes(label = Row.names),
vjust = -1,  # Adjust text position
size = 3,
color = "black"
) +
labs(title = paste0("PCA:", title), x = "PC1", y = "PC2") +
theme_minimal()
# PCA of data being removed
data_path <- "../../Data/Heritability_Outputs/"
number_heri_alk <- read.csv(paste0(data_path, removed_data_alk, "_data_1.csv"), header = TRUE)
indviduals_removed_alk <- read.csv(paste0(data_path, removed_data_alk, "_data_2.csv"), header = TRUE)
number_heri_ct <- read.csv(paste0(data_path, removed_data_ct, "_data_1.csv"), header = TRUE)
indviduals_removed_ct <- read.csv(paste0(data_path, removed_data_ct, "_data_2.csv"), header = TRUE)
NHI_data_alk <- cbind(number_heri_alk, indviduals_removed_alk)
NHI_data_ct <- cbind(number_heri_ct, indviduals_removed_ct)
pca_df_2 <- merge(pca_df,NHI_data_alk, by.x = "Row.names", by.y = "x", all = TRUE )
pca_df_2$color <- ifelse(is.na(pca_df_2$N), "black", "purple")
pca_df_3 <- merge(pca_df,NHI_data_ct, by.x = "Row.names", by.y = "x", all = TRUE )
pca_df_3$color <- ifelse(is.na(pca_df_3$N), "black", "purple")
#Create plot that shows removed individuals
removed_data_pca <- ggplot(pca_df_2, aes(x = PC1, y = PC2)) +
geom_point(aes(color = color), size = 3) + # Color based on N
scale_color_manual(values = c("black", "purple"),
labels = c("black" = "Stayed", "purple" = "Removed")) + # Set color scheme
geom_text(aes(label = ifelse(!is.na(N), N, "")), vjust = -1, size = 3) + # Add N value above points
labs(title = paste0("PCA Plot Colored by Removed Individuals ", "Alkaloids" ), x = "PC1", y = "PC2") +
theme_minimal()
removed_data_pca2 <- ggplot(pca_df_3, aes(x = PC1, y = PC2)) +
geom_point(aes(color = color), size = 3) + # Color based on N
scale_color_manual(values = c("black", "purple"),
labels = c("black" = "Stayed", "purple" = "Removed")) + # Set color scheme
geom_text(aes(label = ifelse(!is.na(N), N, "")), vjust = -1, size = 3) + # Add N value above points
labs(title = paste0("PCA Plot Colored by Removed Individuals ", "CT" ), x = "PC1", y = "PC2") +
theme_minimal()
# PCA graphic showing individuals removed from both alkaloids and CT
# Combine the IDs from both datasets
combined_ids <- data.frame(ID = unique(c(NHI_data_alk$x, NHI_data_ct$x)))
# Check where each ID appears
combined_ids$Source <- ifelse(
combined_ids$ID %in% NHI_data_alk$x & combined_ids$ID %in% NHI_data_ct$x, "Both",
ifelse(combined_ids$ID %in% NHI_data_alk$x, "NHI_data_alk", "NHI_data_ct")
)
pca_df_4 <- merge(pca_df,combined_ids, by.x = "Row.names", by.y = "ID", all = TRUE )
pca_df_4$Source[is.na(pca_df_4$Source)] <- "Not_Removed"
#Create plot that shows removed individuals
removed_data_by_pheno <- ggplot(pca_df_4, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Source), size = 4, alpha = 0.75) + # Color based on N
scale_color_manual(values = c("purple", "red", "blue", "black"),
labels = c("Removed in Both", "Removed in Alkaloids", "Removed in CT", "Not Removed")) +
labs(title = paste0("PCA Plot Colored by Removed Individuals by Phenotype" ), x = "PC1", y = "PC2") +
theme_bw()
# return plot list
return(list(plot1 = kin_heatmap, plot2 = kin_pca, plot3 = removed_data_pca, plot4 = removed_data_by_pheno))
}
################## Heatmap and PCA Analysis Function ###########################
base_kin_analysis <- function(pheno_data, geno_matrix, cross_list, title, removed_data_alk, removed_data_ct) {
# Ensure both datasets have the same IDs
common_IDs <- intersect(pheno_data$ID, rownames(geno_matrix))
# Subset data to include only common IDs
pheno_data <- pheno_data[pheno_data$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == pheno_data$ID)) {
stop("Row names of geno_data do not match the ID in pheno_data.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
geno_data <- geno_data %>% mutate_all(convert_genotypes)
# Convert geno_data back to matrix for kinship matrix calculation
geno_data <- as.matrix(geno_data)
# Create kinship matrix using Gmatrix function
kinship_matrix <- Gmatrix(SNPmatrix = geno_data, method = "VanRaden")
pca_result <- prcomp(kinship_matrix)
diag(kinship_matrix) <- NA
kin_heatmap <- pheatmap(kinship_matrix,
cluster_rows = TRUE,
cluster_cols = TRUE,
color = colorRampPalette(c("blue", "white", "red"))(50),
main = paste0("Kinship Matrix Heatmap ", title))
# Perform PCA on the kinship matrix (or SNP matrix if needed)
pca_scores <- pca_result$x  # Principal component scores
explained_variance <- pca_result$sdev^2 / sum(pca_result$sdev^2)
pca_df <- data.frame(PC1 = pca_scores[, 1], PC2 = pca_scores[, 2])
pca_df <-merge(pca_df, cross_list, by.x = "row.names", by.y = "V1" )
pca_df <- pca_df %>% rename(Cross = V2)
# Create the scatter plot of PC1 vs PC2
kin_pca <- ggplot(pca_df, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Cross), size = 3, alpha = 0.3) +  # Plot the points
geom_text(
data = subset(pca_df, grepl("parent", Cross, ignore.case = TRUE)),  # Filter for "parent"
aes(label = Row.names),
vjust = -1,  # Adjust text position
size = 3,
color = "black"
) +
labs(title = paste0("PCA:", title), x = "PC1", y = "PC2") +
theme_minimal()
# PCA of data being removed
data_path <- "../../Data/Heritability_Outputs/"
number_heri_alk <- read.csv(paste0(data_path, removed_data_alk, "_data_1.csv"), header = TRUE)
indviduals_removed_alk <- read.csv(paste0(data_path, removed_data_alk, "_data_2.csv"), header = TRUE)
number_heri_ct <- read.csv(paste0(data_path, removed_data_ct, "_data_1.csv"), header = TRUE)
indviduals_removed_ct <- read.csv(paste0(data_path, removed_data_ct, "_data_2.csv"), header = TRUE)
NHI_data_alk <- cbind(number_heri_alk, indviduals_removed_alk)
NHI_data_ct <- cbind(number_heri_ct, indviduals_removed_ct)
pca_df_2 <- merge(pca_df,NHI_data_alk, by.x = "Row.names", by.y = "x", all = TRUE )
pca_df_2$color <- ifelse(is.na(pca_df_2$N), "black", "purple")
pca_df_3 <- merge(pca_df,NHI_data_ct, by.x = "Row.names", by.y = "x", all = TRUE )
pca_df_3$color <- ifelse(is.na(pca_df_3$N), "black", "purple")
#Create plot that shows removed individuals
removed_data_pca <- ggplot(pca_df_2, aes(x = PC1, y = PC2)) +
geom_point(aes(color = color), size = 3) + # Color based on N
scale_color_manual(values = c("black", "purple"),
labels = c("black" = "Stayed", "purple" = "Removed")) + # Set color scheme
geom_text(aes(label = ifelse(!is.na(N), N, "")), vjust = -1, size = 3) + # Add N value above points
labs(title = paste0("PCA Plot Colored by Removed Individuals ", "Alkaloids" ), x = "PC1", y = "PC2") +
theme_minimal()
removed_data_pca2 <- ggplot(pca_df_3, aes(x = PC1, y = PC2)) +
geom_point(aes(color = color), size = 3) + # Color based on N
scale_color_manual(values = c("black", "purple"),
labels = c("black" = "Stayed", "purple" = "Removed")) + # Set color scheme
geom_text(aes(label = ifelse(!is.na(N), N, "")), vjust = -1, size = 3) + # Add N value above points
labs(title = paste0("PCA Plot Colored by Removed Individuals ", "CT" ), x = "PC1", y = "PC2") +
theme_minimal()
# PCA graphic showing individuals removed from both alkaloids and CT
# Combine the IDs from both datasets
combined_ids <- data.frame(ID = unique(c(NHI_data_alk$x, NHI_data_ct$x)))
# Check where each ID appears
combined_ids$Source <- ifelse(
combined_ids$ID %in% NHI_data_alk$x & combined_ids$ID %in% NHI_data_ct$x, "Both",
ifelse(combined_ids$ID %in% NHI_data_alk$x, "NHI_data_alk", "NHI_data_ct")
)
pca_df_4 <- merge(pca_df,combined_ids, by.x = "Row.names", by.y = "ID", all = TRUE )
pca_df_4$Source[is.na(pca_df_4$Source)] <- "Not_Removed"
#Create plot that shows removed individuals
removed_data_by_pheno <- ggplot(pca_df_4, aes(x = PC1, y = PC2)) +
geom_point(aes(color = Source), size = 4, alpha = 0.75) + # Color based on N
scale_color_manual(values = c("purple", "red", "blue", "black"),
labels = c("Removed in Both", "Removed in Alkaloids", "Removed in CT", "Not Removed")) +
labs(title = paste0("PCA Plot Colored by Removed Individuals by Phenotype" ), x = "PC1", y = "PC2") +
theme_bw()
# return plot list
return(list(plot1 = kin_heatmap, plot2 = kin_pca, plot3 = removed_data_pca, plot4 = removed_data_pca2, plot5 = removed_data_by_pheno))
}
plots_star_avg <- base_kin_analysis(Residual_data_avg_outliars_rm, geno_matrix, cross_list, title = "Star Cross Years Avraged", removed_data_alk = "plot_avg_star_alk", removed_data_ct = "plot_avg_star_ct")
plot5 <- plots_star_avg$plot5
plot1 <- plots_star_avg$plot1
plot2 <- plots_star_avg$plot2
plot3 <- plots_star_avg$plot3
plot4 <- plots_star_avg$plot4
plot5 <- plots_star_avg$plot5
grid.arrange(plot2, plot3, plot4, plot5, ncol = 2, nrow = 2)
