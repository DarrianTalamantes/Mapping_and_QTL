allpehnotype_data_export_23$Year <- "2023"
allpehnotype_data_export_24 <- subset(all_Data_2024, select = c(ID,Delta_CT_adj,Delta_CT_OG,ng.g,Data_Set))
allpehnotype_data_export_24$Year <- "2024"
head(allpehnotype_data_export_23)
head(allpehnotype_data_export_24)
#Recombining the data into one large table
phenotypes23_24 <- rbind(allpehnotype_data_export_23,allpehnotype_data_export_24)
phenotypes23_24$ID <- gsub("-", "_", phenotypes23_24$ID)
head(phenotypes23_24,15)
#Removing batch effects and leaving only residuals.
lm_model_alk <- lm(ng.g ~ Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Alkaloids_Res <- resid(lm_model_alk)
lm_model_CT_OG <- lm(Delta_CT_OG ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_OG_Res <- resid(lm_model_CT_OG)
lm_model_CT_adj <- lm(Delta_CT_adj ~ Data_Set + Year, data = phenotypes23_24, na.action = na.exclude)
phenotypes23_24$Delta_CT_adj_Res <- resid(lm_model_CT_adj)
head(phenotypes23_24,15)
# Removing any rows that were genetic outliars
colnames(good_genetics)[1] <- "ID"
gg_phenotypes23_24 <- merge(phenotypes23_24, good_genetics, by = "ID")
head(gg_phenotypes23_24,15)
# Now that we have residuals we have to get avarages and export the data
avarage_data <- function(data_set){
Alkaloid_residuals_avaraged <- data_set %>%
group_by(ID) %>%
summarise(Alkaloids_Res_avg = mean(Alkaloids_Res, na.rm = TRUE)) %>%
filter(!is.na(Alkaloids_Res_avg))
DeltaCT_adj_residuals_avaraged <- data_set %>%
group_by(ID) %>%
summarise(DeltaCT_adj_Res_avg = mean(Delta_CT_adj_Res, na.rm = TRUE)) %>%
filter(!is.na(DeltaCT_adj_Res_avg))
DeltaCT_OG_residuals_avaraged <- data_set %>%
group_by(ID) %>%
summarise(DeltaCT_OG_Res_avg = mean(Delta_CT_OG_Res, na.rm = TRUE)) %>%
filter(!is.na(DeltaCT_OG_Res_avg))
Residual_data_avg <- merge(Alkaloid_residuals_avaraged,
DeltaCT_adj_residuals_avaraged,
by = "ID")
Residual_data_avg <- merge(Residual_data_avg,
DeltaCT_OG_residuals_avaraged,
by = "ID")
return(Residual_data_avg)
}
Residual_data_avg <- avarage_data(phenotypes23_24)
gg_Residual_data_avg <- avarage_data(gg_phenotypes23_24)
# Remove phenotype outliars
pg_Residual_data_avg <- gg_Residual_data_avg  # Start with the original data frame
for (col_name in colnames(gg_Residual_data_avg)[-1]) {  # Exclude the first column (ID)
# Calculate the mean and standard deviation for the column
mean_value <- mean(gg_Residual_data_avg[[col_name]], na.rm = TRUE)
sd_value <- sd(gg_Residual_data_avg[[col_name]], na.rm = TRUE)
# Define the threshold for removal (mean Â± 2.5 * standard deviation)
threshold_lower <- mean_value - 2.5 * sd_value
threshold_upper <- mean_value + 2.5 * sd_value
# Remove rows where the value is outside of the defined range for this column
pg_Residual_data_avg <- pg_Residual_data_avg[pg_Residual_data_avg[[col_name]] >= threshold_lower & pg_Residual_data_avg[[col_name]] <= threshold_upper, ]
}
# Remove not important parents
abscent_parents <- data.frame(ID = c("301", "302", "304", "305", "307", "308", "313", "315", "316", "318", "319", "320"))
pg_Residual_data_avg <- pg_Residual_data_avg[!pg_Residual_data_avg$ID %in% abscent_parents$ID,]
#Save the phenotype data sets
write.table(Residual_data_avg, file = paste0(data_folder,"/Phenotype_Data/Residual_data_avg.txt"), sep = '\t', row.names=FALSE)
write.table(pg_Residual_data_avg, file = paste0(data_folder,"/Phenotype_Data/pg_Residual_data_avg"), sep = '\t', row.names=FALSE)
# Graphs to look at the avraged residual data with outliars
p1 <- ggplot(Residual_data_avg, aes(x = Alkaloids_Res_avg)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Alkaloids", x = "Value", y = "Frequency") +
theme_bw()
p2 <- ggplot(Residual_data_avg, aes(x = DeltaCT_adj_Res_avg)) +
geom_histogram(binwidth = .25, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Delta CT adj", x = "Value", y = "Frequency") +
theme_bw()
p3 <- ggplot(Residual_data_avg, aes(x = DeltaCT_OG_Res_avg)) +
geom_histogram(binwidth = .25, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Delta CT OG", x = "Value", y = "Frequency") +
theme_bw()
grid.arrange(p1, p2, p3, ncol = 2, nrow = 2)
# Graphs to look at the avaraged residual data with genetic and phenotypic outliars removed
p1 <- ggplot(pg_Residual_data_avg, aes(x = Alkaloids_Res_avg)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Alkaloids \n Outliars Removed", x = "Value", y = "Frequency") +
theme_bw()
p2 <- ggplot(pg_Residual_data_avg, aes(x = DeltaCT_adj_Res_avg)) +
geom_histogram(binwidth = .25, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Delta CT adj \n Outliars Removed", x = "Value", y = "Frequency") +
theme_bw()
p3 <- ggplot(pg_Residual_data_avg, aes(x = DeltaCT_OG_Res_avg)) +
geom_histogram(binwidth = .25, fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Values for Residuals of Delta CT OG \n Outliars Removed", x = "Value", y = "Frequency") +
theme_bw()
grid.arrange(p1, p2, p3, ncol = 2, nrow = 2)
############### Scatter plots #######################
head(pg_Residual_data_avg)
phenotypes_23 <- subset(phenotypes23_24, Year == 2023)
phenotypes_24 <- subset(phenotypes23_24, Year == 2024)
# linear model
model <- lm(Alkaloids_Res_avg ~ DeltaCT_adj_Res_avg, data = pg_Residual_data_avg)
rsq <- summary(model)$r.squared #This is low so I think I should use spearman.
# Function to calculate r squared and make scatter plot
scatterplot_phenos <- function(dataset, Alkaloidcol, DeltaCTcol, Title) {
# Perform Spearman correlation
spearmodel <- cor.test(dataset[[Alkaloidcol]],
dataset[[DeltaCTcol]],
method = "spearman",
use = "complete.obs")  # Ignore NAs
rho <- spearmodel$estimate
rsq <- rho^2
p <- spearmodel$p.value
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = -1, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 0, vjust = -1, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
}
scatterplot_phenos(pg_Residual_data_avg,"Alkaloids_Res_avg","DeltaCT_adj_Res_avg", "Residual Alkaloids vs Efficiency Adjusted CT Ratio")
scatterplot_phenos(phenotypes_23,"Alkaloids_Res","Delta_CT_adj_Res", "2023")
scatterplot_phenos(phenotypes_24,"Alkaloids_Res","Delta_CT_adj_Res", "2024")
IDs <- pg_Residual_data_avg$ID
# Function to calculate r squared and make scatter plot
scatterplot_phenos <- function(dataset, Alkaloidcol, DeltaCTcol, Title) {
# Perform Spearman correlation
spearmodel <- cor.test(dataset[[Alkaloidcol]],
dataset[[DeltaCTcol]],
method = "spearman",
use = "complete.obs")  # Ignore NAs
rho <- spearmodel$estimate
rsq <- rho^2
p <- spearmodel$p.value
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = -2, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 0, vjust = -2, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
}
scatterplot_phenos(pg_Residual_data_avg,"Alkaloids_Res_avg","DeltaCT_adj_Res_avg", "Alkaloids vs Delta CT Ratio: Half-Sib")
# Function to calculate r squared and make scatter plot
scatterplot_phenos <- function(dataset, Alkaloidcol, DeltaCTcol, Title) {
# Perform Spearman correlation
spearmodel <- cor.test(dataset[[Alkaloidcol]],
dataset[[DeltaCTcol]],
method = "spearman",
use = "complete.obs")  # Ignore NAs
rho <- spearmodel$estimate
rsq <- rho^2
p <- spearmodel$p.value
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = 1, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 0, vjust = 1, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
}
scatterplot_phenos(pg_Residual_data_avg,"Alkaloids_Res_avg","DeltaCT_adj_Res_avg", "Alkaloids vs Delta CT Ratio: Half-Sib")
scatterplot_phenos(phenotypes_23,"Alkaloids_Res","Delta_CT_adj_Res", "2023")
scatterplot_phenos(phenotypes_24,"Alkaloids_Res","Delta_CT_adj_Res", "2024")
library(tidyverse)
# Load in data
data_folder = "/home/darrian/Documents/Mapping_and_QTL/Data"
parental_alk <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Parent_Alkaloids_R.csv"), header = TRUE)
parental_CT <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Clone_Parent_Biomass_Data.csv"), header = TRUE)
parental_phenos <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Parental_Phenotypes_Clean.csv"), header = TRUE)
# Clean up data
parental_alk$Parent <- as.character(parental_alk$Parent)
parental_CT$ID <- as.character(parental_CT$ID)
parental_CT <- parental_CT %>%
rename(Parent = ID)
################################################################################
#Box plot data
################################################################################
# Alkaloid Box Plots
anova <- aov(ng.g ~ Parent, data = parental_alk)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_alk, Parent) %>%
summarise(mean=mean(ng.g), quant = quantile(ng.g, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
alk <- ggplot(parental_alk, aes(x=Parent, y=ng.g, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Ergot Alkaloid Amount") +
scale_fill_discrete(name = "Parent") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
# CT ratio boxplots
anova <- aov(CP_Ratio ~ Parent, data = parental_CT)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_CT, Parent) %>%
summarise(mean=mean(CP_Ratio), quant = quantile(CP_Ratio, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
CT <- ggplot(parental_CT, aes(x=Parent, y=CP_Ratio, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Delta CT") +
ylim(.7,1.4) +
scale_fill_discrete(name = "Parent") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
#Combine the plots
combined_plot <- grid.arrange(
alk + theme(legend.position = "none"),
CT + theme(legend.position = "none"),
ncol = 2,
top = textGrob("Differences in Maternal Parent Clones",
gp = gpar(fontsize = 25, fontface = "bold")))
library(gridExtra)
# Load in data
data_folder = "/home/darrian/Documents/Mapping_and_QTL/Data"
parental_alk <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Parent_Alkaloids_R.csv"), header = TRUE)
parental_CT <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Clone_Parent_Biomass_Data.csv"), header = TRUE)
parental_phenos <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Parental_Phenotypes_Clean.csv"), header = TRUE)
# Clean up data
parental_alk$Parent <- as.character(parental_alk$Parent)
parental_CT$ID <- as.character(parental_CT$ID)
parental_CT <- parental_CT %>%
rename(Parent = ID)
################################################################################
#Box plot data
################################################################################
# Alkaloid Box Plots
anova <- aov(ng.g ~ Parent, data = parental_alk)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_alk, Parent) %>%
summarise(mean=mean(ng.g), quant = quantile(ng.g, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
alk <- ggplot(parental_alk, aes(x=Parent, y=ng.g, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Ergot Alkaloid Amount") +
scale_fill_discrete(name = "Parent") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
# CT ratio boxplots
anova <- aov(CP_Ratio ~ Parent, data = parental_CT)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_CT, Parent) %>%
summarise(mean=mean(CP_Ratio), quant = quantile(CP_Ratio, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
CT <- ggplot(parental_CT, aes(x=Parent, y=CP_Ratio, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Delta CT") +
ylim(.7,1.4) +
scale_fill_discrete(name = "Parent") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
#Combine the plots
combined_plot <- grid.arrange(
alk + theme(legend.position = "none"),
CT + theme(legend.position = "none"),
ncol = 2,
top = textGrob("Differences in Maternal Parent Clones",
gp = gpar(fontsize = 25, fontface = "bold")))
library(gridExtra)
# Load in data
data_folder = "/home/darrian/Documents/Mapping_and_QTL/Data"
parental_alk <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Parent_Alkaloids_R.csv"), header = TRUE)
parental_CT <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Clone_Parent_Biomass_Data.csv"), header = TRUE)
parental_phenos <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Parental_Phenotypes_Clean.csv"), header = TRUE)
# Clean up data
parental_alk$Parent <- as.character(parental_alk$Parent)
parental_CT$ID <- as.character(parental_CT$ID)
parental_CT <- parental_CT %>%
rename(Parent = ID)
# Alkaloid Box Plots
anova <- aov(ng.g ~ Parent, data = parental_alk)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_alk, Parent) %>%
summarise(mean=mean(ng.g), quant = quantile(ng.g, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
alk <- ggplot(parental_alk, aes(x=Parent, y=ng.g, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Ergot Alkaloid Amount") +
scale_fill_discrete(name = "Parent") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
# CT ratio boxplots
anova <- aov(CP_Ratio ~ Parent, data = parental_CT)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_CT, Parent) %>%
summarise(mean=mean(CP_Ratio), quant = quantile(CP_Ratio, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
CT <- ggplot(parental_CT, aes(x=Parent, y=CP_Ratio, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Delta CT") +
ylim(.7,1.4) +
scale_fill_discrete(name = "Parent") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
#Combine the plots
combined_plot <- grid.arrange(
alk + theme(legend.position = "none"),
CT + theme(legend.position = "none"),
ncol = 2,
top = textGrob("Differences in Maternal Parent Clones",
gp = gpar(fontsize = 25, fontface = "bold")))
library(grid)
#Combine the plots
combined_plot <- grid.arrange(
alk + theme(legend.position = "none"),
CT + theme(legend.position = "none"),
ncol = 2,
top = textGrob("Differences in Maternal Parent Clones",
gp = gpar(fontsize = 25, fontface = "bold")))
alk
CT
anova <- aov(ng.g ~ Parent, data = parental_alk)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_alk, Parent) %>%
summarise(mean=mean(ng.g), quant = quantile(ng.g, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
ggplot(parental_alk, aes(x=Parent, y=ng.g, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Ergot Alkaloid Amount") +
scale_fill_discrete(name = "Parent") +
ggtitle("Progenator Alkaloids Differences") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
anova <- aov(CP_Ratio ~ Parent, data = parental_CT)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_CT, Parent) %>%
summarise(mean=mean(CP_Ratio), quant = quantile(CP_Ratio, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
ggplot(parental_CT, aes(x=Parent, y=CP_Ratio, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Delta CT") +
ylim(.7,1.4) +
scale_fill_discrete(name = "Parent") +
ggtitle("Progenator Fungal Biomass Differences") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
#### Seperate plots ######
#Alkaloid
anova <- aov(ng.g ~ Parent, data = parental_alk)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_alk, Parent) %>%
summarise(mean=mean(ng.g), quant = quantile(ng.g, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
ggplot(parental_alk, aes(x=Parent, y=ng.g, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Ergot Alkaloid Amount") +
scale_fill_discrete(name = "Parent") +
ggtitle("Progenitor Alkaloid Differences") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
anova <- aov(CP_Ratio ~ Parent, data = parental_CT)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_CT, Parent) %>%
summarise(mean=mean(CP_Ratio), quant = quantile(CP_Ratio, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
ggplot(parental_CT, aes(x=Parent, y=CP_Ratio, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Delta CT") +
ylim(.7,1.4) +
scale_fill_discrete(name = "Parent") +
ggtitle("Progenitor Fungal Biomass Differences") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
