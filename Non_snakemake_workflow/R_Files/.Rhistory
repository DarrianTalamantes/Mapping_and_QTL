xlab("Plant Lines") +
ylab("ALkaloid Residuals") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Cross, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
anova <- aov(DeltaCT_adj_Res_avg ~ Cross, data = pg_Residual_data_avg)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(pg_Residual_data_avg, Cross) %>%
summarise(mean=mean(DeltaCT_adj_Res_avg), quant = quantile(DeltaCT_adj_Res_avg, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Cross)
Tk$cld <- cld$Letters
print(Tk)
ggplot(pg_Residual_data_avg, aes(x=Cross, y=DeltaCT_adj_Res_avg, fill = Cross, group=Cross)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Delta CT residuals") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Cross, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
anova <- aov(Alkaloids_Res_avg ~ Cross, data = pg_Residual_data_avg)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(pg_Residual_data_avg, Cross) %>%
summarise(mean=mean(Alkaloids_Res_avg), quant = quantile(Alkaloids_Res_avg, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Cross)
Tk$cld <- cld$Letters
print(Tk)
ggplot(pg_Residual_data_avg, aes(x=Cross, y=Alkaloids_Res_avg, fill = Cross, group=Cross)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid Residuals") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Cross, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
### Boxplots by cross. Delta CT
anova <- aov(DeltaCT_adj_Res_avg ~ Cross, data = pg_Residual_data_avg)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(pg_Residual_data_avg, Cross) %>%
summarise(mean=mean(DeltaCT_adj_Res_avg), quant = quantile(DeltaCT_adj_Res_avg, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Cross)
Tk$cld <- cld$Letters
print(Tk)
ggplot(pg_Residual_data_avg, aes(x=Cross, y=DeltaCT_adj_Res_avg, fill = Cross, group=Cross)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Delta CT residuals") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Cross, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
anova <- aov(Alkaloids_Res_avg ~ Cross, data = pg_Residual_data_avg)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(pg_Residual_data_avg, Cross) %>%
summarise(mean=mean(Alkaloids_Res_avg), quant = quantile(Alkaloids_Res_avg, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Cross)
Tk$cld <- cld$Letters
print(Tk)
ggplot(pg_Residual_data_avg, aes(x=Cross, y=Alkaloids_Res_avg, fill = Cross, group=Cross)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid Residuals") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Cross, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
### Boxplots by cross. Delta CT
anova <- aov(DeltaCT_adj_Res_avg ~ Cross, data = pg_Residual_data_avg)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(pg_Residual_data_avg, Cross) %>%
summarise(mean=mean(DeltaCT_adj_Res_avg), quant = quantile(DeltaCT_adj_Res_avg, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Cross)
Tk$cld <- cld$Letters
print(Tk)
ggplot(pg_Residual_data_avg, aes(x=Cross, y=DeltaCT_adj_Res_avg, fill = Cross, group=Cross)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Delta CT residuals") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Cross, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
library(tidyverse)
# Load in data
data_folder = "/home/darrian/Documents/Mapping_and_QTL/Data"
parental_alk <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Parent_Alkaloids_R.csv"), header = TRUE)
parental_CT <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Clone_Parent_Biomass_Data.csv"), header = TRUE)
# Clean up data
parental_alk$Parent <- as.character(parental_alk$Parent)
parental_CT$ID <- as.character(parental_CT$ID)
parental_CT <- parental_CT %>%
rename(Parent = ID)
################################################################################
#Box plot data
################################################################################
library(tidyverse)
# Load in data
data_folder = "/home/darrian/Documents/Mapping_and_QTL/Data"
parental_alk <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Parent_Alkaloids_R.csv"), header = TRUE)
parental_CT <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Clone_Parent_Biomass_Data.csv"), header = TRUE)
# Clean up data
parental_alk$Parent <- as.character(parental_alk$Parent)
parental_CT$ID <- as.character(parental_CT$ID)
parental_CT <- parental_CT %>%
rename(Parent = ID)
# Alkaloid Box Plots
anova <- aov(ng.g ~ Parent, data = parental_alk)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_alk, Parent) %>%
summarise(mean=mean(ng.g), quant = quantile(ng.g, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
alk <- ggplot(parental_alk, aes(x=Parent, y=ng.g, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Ergot Alkaloid Amount") +
scale_fill_discrete(name = "Parent") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
# CT ratio boxplots
anova <- aov(CP_Ratio ~ Parent, data = parental_CT)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(parental_CT, Parent) %>%
summarise(mean=mean(CP_Ratio), quant = quantile(CP_Ratio, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Parent)
Tk$cld <- cld$Letters
print(Tk)
CT <- ggplot(parental_CT, aes(x=Parent, y=CP_Ratio, fill = Parent, group=Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
theme(
text = element_text(size = 20)) +
xlab("Parent") +
ylab("Delta CT") +
ylim(.7,1.4) +
scale_fill_discrete(name = "Parent") +
geom_text(data = Tk, aes(label = cld, x = Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
#Combine the plots
combined_plot <- grid.arrange(
alk + theme(legend.position = "none"),
CT + theme(legend.position = "none"),
ncol = 2,
top = textGrob("Differences in Maternal Parent Clones",
gp = gpar(fontsize = 25, fontface = "bold")))
View(parental_alk)
View(parental_CT)
parental_phenos <- merge(parental_alk, parental_CT, by = "Parent")
View(parental_phenos)
View(parental_alk)
View(parental_CT)
parental_phenos <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Parental_Phenotypes_Clean.csv", header = TRUE)
ss))
parental_phenos <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Parental_Phenotypes_Clean.csv"), header = TRUE)
View(parental_phenos)
parental_phenos <- read.csv(paste0(data_folder,"/Phenotype_Data/Preliminary_Phenotype_Data/Cleaned/Parental_Phenotypes_Clean.csv"), header = TRUE)
View(parental_phenos)
colnames(parental_phenos)
################################################################################
# Scatter Plots and Correlation
################################################################################
model <- lm(Ng.g ~ CP_Ratio, data = parental_phenos)
rsq <- summary(model)$r.squared #This is low so I think I should use spearman.
################################################################################
# Scatter Plots and Correlation
################################################################################
model <- lm(Ng.g ~ CP_Ratio, data = parental_phenos)
rsq <- summary(model)$r.squared #This is low so I think I should use spearman.
# Function to calculate r squared and make scatter plot
scatterplot_phenos <- function(dataset, Alkaloidcol, DeltaCTcol, Title) {
# Perform Spearman correlation
spearmodel <- cor.test(dataset[[Alkaloidcol]],
dataset[[DeltaCTcol]],
method = "spearman",
use = "complete.obs")  # Ignore NAs
rho <- spearmodel$estimate
rsq <- rho^2
p <- spearmodel$p.value
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = -1, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 0, vjust = -1, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
}
scatterplot_phenos(parental_phenos,"Ng.g","CP_Ratio", "Alkaloid vs Relative Biomass of Progenitors")
# Removing Outliars
parental_phenos <-
parental_phenos$Treatment=!"314C1R1"
parental_phenos[parental_phenos$Treatment != "314C1R1", ]
# Removing Outliars
parental_phenos <- parental_phenos[parental_phenos$Treatment != "314C1R1", ]
# Function to calculate r squared and make scatter plot
scatterplot_phenos <- function(dataset, Alkaloidcol, DeltaCTcol, Title) {
# Perform Spearman correlation
spearmodel <- cor.test(dataset[[Alkaloidcol]],
dataset[[DeltaCTcol]],
method = "spearman",
use = "complete.obs")  # Ignore NAs
rho <- spearmodel$estimate
rsq <- rho^2
p <- spearmodel$p.value
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = -1, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 0, vjust = -1, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
}
scatterplot_phenos(parental_phenos,"Ng.g","CP_Ratio", "Alkaloid vs Relative Biomass of Progenitors")
parental_phenos <- parental_phenos[parental_phenos$Treatment != "314C1R1", ]
model <- lm(Ng.g ~ CP_Ratio, data = parental_phenos)
rsq <- summary(model)$r.squared #This is low so I think I should use spearman.
# Function to calculate r squared and make scatter plot
scatterplot_phenos <- function(dataset, Alkaloidcol, DeltaCTcol, Title) {
# Perform Spearman correlation
spearmodel <- cor.test(dataset[[Alkaloidcol]],
dataset[[DeltaCTcol]],
method = "spearman",
use = "complete.obs")  # Ignore NAs
rho <- spearmodel$estimate
rsq <- rho^2
p <- spearmodel$p.value
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = -1, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 0, vjust = -1, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
}
scatterplot_phenos(parental_phenos,"Ng.g","CP_Ratio", "Alkaloid vs Relative Biomass of Progenitors")
View(scatterplot_phenos)
# Function to calculate r squared and make scatter plot
scatterplot_phenos <- function(dataset, Alkaloidcol, DeltaCTcol, Title) {
# Perform Spearman correlation
spearmodel <- cor.test(dataset[[Alkaloidcol]],
dataset[[DeltaCTcol]],
method = "spearman",
use = "complete.obs")  # Ignore NAs
rho <- spearmodel$estimate
rsq <- rho^2
p <- spearmodel$p.value
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = -2, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 0, vjust = -1, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
}
scatterplot_phenos(parental_phenos,"Ng.g","CP_Ratio", "Alkaloid vs Relative Biomass of Progenitors")
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = 0, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 0, vjust = -1, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
# Function to calculate r squared and make scatter plot
scatterplot_phenos <- function(dataset, Alkaloidcol, DeltaCTcol, Title) {
# Perform Spearman correlation
spearmodel <- cor.test(dataset[[Alkaloidcol]],
dataset[[DeltaCTcol]],
method = "spearman",
use = "complete.obs")  # Ignore NAs
rho <- spearmodel$estimate
rsq <- rho^2
p <- spearmodel$p.value
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = 0, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 0, vjust = -1, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
}
scatterplot_phenos(parental_phenos,"Ng.g","CP_Ratio", "Alkaloid vs Relative Biomass of Progenitors")
# Function to calculate r squared and make scatter plot
scatterplot_phenos <- function(dataset, Alkaloidcol, DeltaCTcol, Title) {
# Perform Spearman correlation
spearmodel <- cor.test(dataset[[Alkaloidcol]],
dataset[[DeltaCTcol]],
method = "spearman",
use = "complete.obs")  # Ignore NAs
rho <- spearmodel$estimate
rsq <- rho^2
p <- spearmodel$p.value
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = 0, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 1, vjust = -1, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
}
scatterplot_phenos(parental_phenos,"Ng.g","CP_Ratio", "Alkaloid vs Relative Biomass of Progenitors")
# Function to calculate r squared and make scatter plot
scatterplot_phenos <- function(dataset, Alkaloidcol, DeltaCTcol, Title) {
# Perform Spearman correlation
spearmodel <- cor.test(dataset[[Alkaloidcol]],
dataset[[DeltaCTcol]],
method = "spearman",
use = "complete.obs")  # Ignore NAs
rho <- spearmodel$estimate
rsq <- rho^2
p <- spearmodel$p.value
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = -1, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 0, vjust = 0, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
}
scatterplot_phenos(parental_phenos,"Ng.g","CP_Ratio", "Alkaloid vs Relative Biomass of Progenitors")
# Function to calculate r squared and make scatter plot
scatterplot_phenos <- function(dataset, Alkaloidcol, DeltaCTcol, Title) {
# Perform Spearman correlation
spearmodel <- cor.test(dataset[[Alkaloidcol]],
dataset[[DeltaCTcol]],
method = "spearman",
use = "complete.obs")  # Ignore NAs
rho <- spearmodel$estimate
rsq <- rho^2
p <- spearmodel$p.value
# Create the scatter plot
plot1 <- ggplot(dataset, aes(x = .data[[DeltaCTcol]], y = .data[[Alkaloidcol]])) +
geom_point() +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Linear regression line
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE),
label = paste("Spearman R-squared = ", round(rsq, 3)),
hjust = 0, vjust = 0, size = 5, color = "red") +
annotate("text",
x = min(dataset[[DeltaCTcol]], na.rm = TRUE),
y = max(dataset[[Alkaloidcol]], na.rm = TRUE) -
0.05 * (max(dataset[[Alkaloidcol]], na.rm = TRUE) -
min(dataset[[Alkaloidcol]], na.rm = TRUE)),
label = paste("P-value = ", format(p, digits = 3, scientific = TRUE)),
hjust = 0, vjust = .5, size = 5, color = "red") +
labs(title = Title,
x = "Efficiency Adjusted CT Ratio",
y = "Residual Alkaloids") +
theme_bw() +
theme(text = element_text(size = 20))
return(plot1)
}
scatterplot_phenos(parental_phenos,"Ng.g","CP_Ratio", "Alkaloid vs Relative Biomass of Progenitors")
scatterplot_phenos(parental_phenos,"Ng.g","CP_Ratio", "Alkaloid vs Relative Biomass \n of Progenitors")
