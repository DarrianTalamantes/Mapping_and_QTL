x = "Delta CT Residuals",
y = "Frequency")
plot2 <- ggplot(residual_data_M, aes(x=raw_CT_model.residuals)) +
geom_histogram(bins = 60, fill = "green", color = "black") +
ylim(0,250) +
xlim(-8,8) +
labs(title = "filtered raw CT values",
x = "Delta CT Residuals",
y = "Frequency")
plot3 <- ggplot(residual_data_raw_M, aes(x=CT_model_raw.residuals)) +
geom_histogram(bins = 60, fill = "red", color = "black") +
ylim(0,250) +
xlim(-8,8) +
labs(title = "Unfiltered raw CT values",
x = "Delta CT Residuals",
y = "Frequency")
ggarrange(plot1, plot2, plot3, ncol = 1, nrow = 3)
# Histogram plot of alkaloid residuals
plot2 <- ggplot(residual_data, aes(x=alkaloid_model.residuals)) +
geom_histogram(bins = 60, fill = "blue", color = "black") +
labs(title = "Filtered alkaloid values",
x = "ng per gram",
y = "Frequency")
plot3 <- ggplot(residual_data_raw, aes(x=alkaloid_model_raw.residuals)) +
geom_histogram(bins = 60, fill = "red", color = "black") +
labs(title = "Unfiltered raw alkaloid values",
x = "ng per gram",
y = "Frequency")
ggarrange(plot2, plot3, ncol = 1, nrow = 2)
# Scatter plot to see if we have groupings of stuff
plot5 <- ggplot(residual_data_M, aes(x=Data_Set, y=filtered_CT_model.residuals, color=Data_Set)) +
geom_point() +
theme(axis.text.x = element_blank()) +
labs(title = "Efficiency Filtered Delta CT Values",
x = "ID",
y = "Delta CT")
plot6 <- ggplot(residual_data_M, aes(x=Data_Set, y=raw_CT_model.residuals, color=Data_Set)) +
geom_point() +
theme(axis.text.x = element_blank()) +
labs(title = "Filtered Raw Delta CT Values",
x = "ID",
y = "Delta CT")
plot7 <- ggplot(residual_data_raw_M, aes(x=Data_Set, y=CT_model_raw.residuals, color=Data_Set)) +
geom_point() +
labs(title = "Unfiltered Delta CT Values",
x = "ID",
y = "Delta CT")
ggarrange(plot5, plot6, plot7, ncol = 1, nrow = 3)
# scatterplot plot of alkaloid residuals
plot7 <- ggplot(residual_data_M, aes(x=Alkaloid_Plate, y=alkaloid_model.residuals, color=Alkaloid_Plate)) +
geom_point() +
labs(title = "Filtered Alkaloid Values",
x = "ID",
y = "ng/g")
plot8 <- ggplot(residual_data_raw_M, aes(x=Alkaloid_Plate, y=alkaloid_model_raw.residuals, color=Alkaloid_Plate)) +
geom_point() +
labs(title = "Unfiltered Alkaloid Values",
x = "ID",
y = "ng/g")
ggarrange(plot7, plot8, ncol = 1, nrow = 2)
################################################################################
# Making graphs more usefull for presentations, with residuals
################################################################################
write.table(residual_data_M, file = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/All_Data_Filtered/residual_data.txt", row.names = FALSE)
# is the residual data linearly related
plot(residual_data$filtered_CT_model.residuals, residual_data$alkaloid_model.residuals) # fuck no
# Make the above graph just better
model <- lm(filtered_CT_model.residuals ~ alkaloid_model.residuals, data = residual_data_M)
# Extract the R-squared value
rsquared <- summary(model)$r.squared
# Create a scatter plot
ggplot(residual_data_M, aes(x = alkaloid_model.residuals, y = filtered_CT_model.residuals, color = Maternal_Parent)) +
geom_point() +
annotate("text", x = -12000, y = 2.4, label = paste("R-squared =", round(rsquared, 3))) +
theme_bw() +
labs(title = "Scatter Plot with R-squared Value",
x = "Alkaloid Residuals",
y = "Delta CT Residuals")
## THis next plot looks at the non residual data
# Make the above graph just better
model <- lm(Delta_CT ~ ng.g, data = phenotype_Data)
# Extract the R-squared value
rsquared <- summary(model)$r.squared
# Create a scatter plot
ggplot(phenotype_Data, aes(x = ng.g, y = Delta_CT)) +
geom_point() +
annotate("text", x = 35000, y = 5, label = paste("R-squared =", round(rsquared, 3))) +
labs(title = "Scatter Plot with R-squared Value",
x = "Alkaloid Residuals",
y = "Delta CT Residuals")
# Showing us getting rid of terrible batch effects.
#Using the OG CP values (not efficiency adjusted)
plot1 <- ggplot(all_Data, aes(x=Delta_CT, color=Data_Set)) +
geom_histogram(binwidth=.2, fill = "white")
plot2 <- ggplot(residual_data_M, aes(x=filtered_CT_model.residuals, color=Data_Set)) +
geom_histogram(binwidth=.2, fill = "white") +
xlab("Delta CT Residuals")
ggarrange(plot1, plot2, ncol = 1, nrow = 2)
# Showing Box plots by maternal parent
residual_data_M$Maternal_Parent <- as.factor(residual_data_M$Maternal_Parent)
removeems <- c("311","318","319")
residual_data_M_2 <- subset(residual_data_M, !(Maternal_Parent %in% removeems))
# Getting the letters for the plots
anova <- aov(alkaloid_model.residuals ~ Maternal_Parent, data = residual_data_M_2)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(residual_data_M_2, Maternal_Parent) %>%
summarise(mean=mean(alkaloid_model.residuals), quant = quantile(alkaloid_model.residuals, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Maternal_Parent)
Tk$cld <- cld$Letters
print(Tk)
ggplot(residual_data_M_2, aes(x=Maternal_Parent, y=alkaloid_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid Residuals") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Maternal_Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
# This first set of data is all the data corresponding to the first set of standards
all_2x2_loc <- "/home/darrian/Desktop/UGA/QPCR_Data_Wrangler/QPCR_Data_Wrangler/Program/int_files/Data_for_Project/all_2x2_Red_Blue.csv"
all_g3p4_loc <- "/home/darrian/Desktop/UGA/QPCR_Data_Wrangler/QPCR_Data_Wrangler/Program/int_files/Data_for_Project/all_g3p4_correspond_to_Red_Blue_Standards.csv"
# This set of data corresponds to the second set of standards and a few redoes. Will be added towrds end
all_2x2_2_loc <- "/home/darrian/Desktop/UGA/QPCR_Data_Wrangler/QPCR_Data_Wrangler/Program/int_files/Data_for_Project/1041-end-redoes_2x2.csv"
all_g3p4_2_loc <- "/home/darrian/Desktop/UGA/QPCR_Data_Wrangler/QPCR_Data_Wrangler/Program/int_files/Data_for_Project/1041-end-redoes_g3p4.csv"
# This set of data is for parents and cross 305x320, will be added twords end
all_315x320_2x2_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Raw_Data/CT_Values/315x320_2x2.csv"
all_315x320_g3p4_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Raw_Data/CT_Values/315x320_G3P4.csv"
all_2x2_1 <- read.csv(all_2x2_loc, header = TRUE, strip.white=TRUE)
all_2x2_1 <- read.csv(all_2x2_loc, header = TRUE, strip.white=TRUE)
all_g3p4_1 <- read.csv(all_g3p4_loc, header = TRUE, strip.white=TRUE)
all_2x2_2 <- read.csv(all_2x2_2_loc, header = TRUE, strip.white=TRUE)
all_g3p4_2 <- read.csv(all_g3p4_2_loc, header = TRUE, strip.white=TRUE)
all_315x320_2x2 <- read.csv(all_315x320_2x2_loc, header = TRUE, strip.white=TRUE)
all_315x320_g3p4 <- read.csv(all_315x320_g3p4_loc, header = TRUE, strip.white=TRUE)
all_2x2_1$Standard <- "First_combo"
all_2x2_2$Standard <- "Second_combo"
all_g3p4_1$Standard <- "First_combo"
all_g3p4_2$Standard <- "Second_combo"
all_315x320_2x2$Standard <- "Pre_combo"
all_315x320_g3p4$Standard <- "Pre_combo"
all_2x2_samples <- rbind(all_2x2_1, all_2x2_2, all_315x320_2x2)
all_g3p4_samples <- rbind(all_g3p4_1, all_g3p4_2, all_315x320_g3p4)
###########
# Functions
###########
# This function takes the data set I combined using cat, all_2x2 is an example
# It will filter out NA's, 0's, standards
# It spits out a table of means for all samples that passed filtering.
Data_Filtering <- function(Data){
Data$Cp <- as.numeric(Data$Cp)
Data[Data == ''] <- NA
# filtering data 2x2
for (x in nrow(Data):1){
if (is.na(Data[x,3])){
Data <- Data[-x,]
}
else if (is.na(Data[x,2])){
Data <- Data[-x,]
}
else if (Data[x,2]=="0"){
Data <- Data[-x,]
}
else if (Data[x,1]=="Pos"){
Data <- Data[-x,]
}
else if (str_detect(Data[x,3], "std") | Data[x,3] == 0 | Data[x,3] == "water"){
Data <- Data[-x,]
}
}
Data_Mean <-
Data %>%
group_by(Data_Set,Treatment) %>%
summarise(MeanCP = mean(Cp))
return(Data_Mean)
}
#Loading in data
alklaoid_loc="/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Alkaloid_Data_Combined.csv"
alklaoid <- read.csv(alklaoid_loc, header = TRUE, strip.white=TRUE)
# Giving data parents
alklaoid[c('Maternal_Parent', 'DeleteMe')] <- str_split_fixed(alklaoid$ID, '-', 2)
alklaoid <- subset(alklaoid, select = -c(DeleteMe))
# adding the metadata and merging it with the phenotype data
extraction_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Meta_Data/Extraction_info.csv"
harvest_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Meta_Data/Harvest_Info.csv"
extraction <- read.csv(extraction_loc, header = TRUE, strip.white=TRUE)
harvest <- read.csv(harvest_loc, header = TRUE, strip.white=TRUE)
# loading in alkaloid data
alklaoid_raw <- read.csv(alklaoid_loc, header = TRUE, strip.white=TRUE)
alklaoid_raw[c('Maternal_Parent', 'DeleteMe')] <- str_split_fixed(alklaoid_raw$ID, '-', 2)
################################################################################
# Adding the 2024 phenotype data
################################################################################
# Loading in the 2024 metadata
mini_medata_2024_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/2024_Data/Meta_Data_2024.csv"
mini_medata_2024 <- read.csv(mini_medata_2024_loc, header = TRUE, strip.white=TRUE)
# Loading in the biomass data
all_2x2_2024_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/2024_Data/all_2x2_2024.csv"
all_g3p4_2024_loc <-  "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/2024_Data/all_g3p4_2024.csv"
all_2x2_2024 <- read.csv(all_2x2_2024_loc, header = TRUE, strip.white=TRUE)
all_g3p4_2024 <- read.csv(all_g3p4_2024_loc, header = TRUE, strip.white=TRUE)
# all_data_2024 now contains the proper biomass data
#### adding the alkaloid data ####
alkaloid_2024_loc <- "/home/drt06/Documents/Tall_fescue/Alkaloid_Data/2024_samples/alkaloids_2024_Rready.csv"
alkaloid_2024 <- read.csv(alkaloid_2024_loc, header = TRUE, strip.white=TRUE)
# all_data_2024 now contains the proper biomass data
#### adding the alkaloid data ####
alkaloid_2024_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/alkaloids_2024_Rready.csv"
alkaloid_2024 <- read.csv(alkaloid_2024_loc, header = TRUE, strip.white=TRUE)
View(alklaoid)
# This script will look at the alkaloid data for the cloned tested parents
library(ggplot2)
# Loading in data
parent_alkaloid_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Alkaloids_parent_testing.csv"
### Visualize the best crosses
parent_alkaloid <- read.csv(parent_alkaloid_loc, header = TRUE, strip.white=TRUE)
gc()
# This script will look at the alkaloid data for the cloned tested parents
library(ggplot2)
# Loading in data
parent_alkaloid_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Alkaloids_parent_testing.csv"
### Visualize the best crosses
parent_alkaloid <- read.csv(parent_alkaloid_loc, header = TRUE, strip.white=TRUE)
View(parent_alkaloid)
### Visualize the best crosses
parent_alkaloid <- read.csv(parent_alkaloid_loc, header = FALSE, strip.white=TRUE)
##### Making graphs #######
ggplot(parent_alkaloid, aes(x = V4, y = V5)) +
geom_point(color = V2, size = 3) +  # Use geom_point for scatter plot
labs(title = "Scatter Plot of Names vs. Values",
x = "Names",
y = "Values") +
theme_minimal()
##### Making graphs #######
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = V2)) +
geom_point(size = 3) +  # Use geom_point for scatter plot
labs(title = "Scatter Plot of Names vs. Values",
x = "Names",
y = "Values") +
theme_minimal()
################################################################################
# cleaning up the data
################################################################################
parent_alkaloid$V4 <- as.character(parent_alkaloid$V4)
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = V2)) +
geom_point(size = 3) +  # Use geom_point for scatter plot
labs(title = "Scatter Plot of Names vs. Values",
x = "Names",
y = "Values") +
theme_minimal()
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = V2)) +
geom_point(size = 4) +  # Use geom_point for scatter plot
labs(title = "Scatter Plot of Names vs. Values",
x = "Names",
y = "Values") +
theme_minimal()
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = V2)) +
geom_point(size = 4, alpha = .6 ) +  # Use geom_point for scatter plot
labs(title = "Scatter Plot of Names vs. Values",
x = "Names",
y = "Values") +
theme_minimal()
parent_alkaloid <- parent_alkaloid %>% rename(Replicates = V2)
library(tidyr)
parent_alkaloid <- parent_alkaloid %>% rename(Replicates = V2)
library(tidyverse)
parent_alkaloid <- parent_alkaloid %>% rename(Replicates = V2)
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = V2)) +
geom_point(size = 4, alpha = .6 ) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replicates)) +
geom_point(size = 4, alpha = .6 ) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
df_subset <- df %>%
filter(str_detect(ColumnName, "301"))
df_subset <- subset(parent_alkaloid,
select=c(v4 = 301))
df_subset <- subset(parent_alkaloid,
select=c(V4 = 301))
df_subset <- subset(parent_alkaloid, Replicates == "301", select = c(Replicates, V5))
View(df_subset)
df_subset <- subset(parent_alkaloid, V4 == "301", select = c(Replicates, ,V4, V5))
df_subset <- subset(parent_alkaloid, V4 == "301", select = c(Replicates, V4, V5))
aov(V5 ~ Replicates, data = df_subset)
anova_model <- aov(V5 ~ Replicates, data = df_subset)
anova_summary <- summary(anova_model)
anova_summary
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replicates)) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.2)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replicates)) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replicates)) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
df_subset <- subset(parent_alkaloid, V4 == "320", select = c(Replicates, V4, V5))
anova_model <- aov(V5 ~ Replicates, data = df_subset)
anova_summary <- summary(anova_model) # f stat is The ratio of between-group variance to within-group variance
anova_summary
anova_summary$
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replicates)) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
anova_summary[F value]
anova_summary["F vlaue"
]
anova_summary
create_anova_table <-function(parent){
df_subset <- subset(parent_alkaloid, V4 == parent, select = c(Replicates, V4, V5))
anova_model <- aov(V5 ~ Replicates, data = df_subset)
anova_summary <- summary(anova_model) # f stat is The ratio of between-group variance to within-group variance
f_value <- anova_summary[[1]]["group", "F value"]
p_value <- anova_summary[[1]]["group", "Pr(>F)"]
result_table <- data.frame(
Value = parent,
F_value = f_value,
P_value = p_value
)
return(result_table)
}
parent_list <- unique(parent_alkaloid$V4)
parent_list
anova_summary
# Loading in data
parent_alkaloid_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Alkaloids_parent_testing.csv"
### Visualize the best crosses
parent_alkaloid <- read.csv(parent_alkaloid_loc, header = FALSE, strip.white=TRUE)
# Loading in data
parent_alkaloid_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Alkaloids_parent_testing.csv"
### Visualize the best crosses
parent_alkaloid <- read.csv(parent_alkaloid_loc, header = FALSE, strip.white=TRUE)
# Loading in data
parent_alkaloid_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Alkaloids_parent_testing.csv"
### Visualize the best crosses
parent_alkaloid <- read.csv(parent_alkaloid_loc, header = FALSE, strip.white=TRUE)
View(parent_alkaloid)
# Loading in data
parent_alkaloid_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Alkaloids_parent_testing.csv"
### Visualize the best crosses
parent_alkaloid <- read.csv(parent_alkaloid_loc, header = FALSE, strip.white=TRUE)
parent_alkaloid <- parent_alkaloid %>% rename(Replication_Status = V6)
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replication_Status)) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
################################################################################
# cleaning up the data
################################################################################
parent_alkaloid$V4 <- as.character(parent_alkaloid$V4)
parent_alkaloid <- parent_alkaloid %>% rename(Replicates = V2)
parent_alkaloid <- parent_alkaloid %>% rename(Replication_Status = V6)
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replication_Status)) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.2)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replication_Status)) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, fill = Replication_Status)) +
scale_fill_manual(values = c("plum","navy","seagreen","goldenrod", "black")) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replication_Status)) +
scale_color_manual(values = c("plum","navy","seagreen","goldenrod", "black")) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replication_Status)) +
scale_color_manual(values = c("plum","navy","seagreen","goldenrod", "black")) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replication_Status)) +
scale_color_manual(values = c("violet","navy","seagreen","goldenrod", "black")) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_minimal()
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replication_Status)) +
scale_color_manual(values = c("violet","navy","seagreen","goldenrod", "black")) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_bw() +
theme(
axis.text.x = element_text(size = 14),  # Adjust x-axis text size
axis.text.y = element_text(size = 14)   # Adjust y-axis text size
)
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replication_Status)) +
scale_color_manual(values = c("violet","navy","seagreen","goldenrod", "black")) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_bw() +
theme(
axis.text.x = element_text(size = 14),  # Adjust x-axis text size
axis.text.y = element_text(size = 14),   # Adjust y-axis text size
axis.title.x = element_text(size = 16),
axis.title.x = element_text(size = 16),
plot.title = element_text(hjust = 0.5)
)
################################################################################
# Making Graphs
################################################################################
ggplot(parent_alkaloid, aes(x = V4, y = V5, color = Replication_Status)) +
scale_color_manual(values = c("violet","navy","seagreen","goldenrod", "black")) +
geom_point(size = 4, alpha = .6, position = position_jitter(width = 0.1)) +  # Use geom_point for scatter plot
labs(title = "Alkaloid Levels in Parent Replicates",
x = "Parents",
y = "ng/g ergot alkaloids") +
theme_bw() +
theme(
axis.text.x = element_text(size = 14),  # Adjust x-axis text size
axis.text.y = element_text(size = 14),   # Adjust y-axis text size
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
plot.title = element_text(hjust = 0.5)
)
