y = "Delta CT Residuals")
View(phenotype_Data)
ggplot(phenotype_Data, aes(x = Delta_CT, y = ng.g)) +
geom_point() +
labs(title = "Scatter Plot with R-squared Value",
x = "Alkaloid Residuals",
y = "Delta CT Residuals")
## THis next plot looks at the non residual data
# Make the above graph just better
model <- lm(Delta_CT ~ ng.g, data = phenotype_Data)
# Extract the R-squared value
rsquared <- summary(model)$r.squared
# Create a scatter plot
ggplot(phenotype_Data, aes(x = ng.g, y = Delta_CT)) +
geom_point() +
annotate("text", x = 5, y = 35000, label = paste("R-squared =", round(rsquared, 3))) +
labs(title = "Scatter Plot with R-squared Value",
x = "Alkaloid Residuals",
y = "Delta CT Residuals")
# Create a scatter plot
ggplot(phenotype_Data, aes(x = ng.g, y = Delta_CT)) +
geom_point() +
annotate("text", x = 35000, y = 5, label = paste("R-squared =", round(rsquared, 3))) +
labs(title = "Scatter Plot with R-squared Value",
x = "Alkaloid Residuals",
y = "Delta CT Residuals")
#HIstograms with different coloring based on different groupings
plot1 <- ggplot(all_Data, aes(x=Delta_CT, color=Data_Set)) +
geom_histogram(binwidth=.2, fill = "white")
#Using the OG CP values (not efficiency adjusted)
plot2 <- ggplot(all_Data, aes(x=Delta_CT_OG, color=Data_Set)) +
geom_histogram(binwidth=.2, fill = "white")
ggarrange(plot2, plot1, ncol = 1, nrow = 2)
View(residual_data_M)
# Showing us getting rid of terrible batch effects.
#Using the OG CP values (not efficiency adjusted)
plot1 <- ggplot(all_Data, aes(x=Delta_CT_OG, color=Data_Set)) +
geom_histogram(binwidth=.2, fill = "white")
plot2 <- ggplot(residual_data_M, aes(x=filtered_CT_model.residuals, color=Data_Set)) +
geom_histogram(binwidth=.2, fill = "white")
ggarrange(plot2, plot1, ncol = 1, nrow = 2)
# Showing us getting rid of terrible batch effects.
#Using the OG CP values (not efficiency adjusted)
plot1 <- ggplot(all_Data, aes(x=Delta_CT, color=Data_Set)) +
geom_histogram(binwidth=.2, fill = "white")
plot2 <- ggplot(residual_data_M, aes(x=filtered_CT_model.residuals, color=Data_Set)) +
geom_histogram(binwidth=.2, fill = "white")
ggarrange(plot2, plot1, ncol = 1, nrow = 2)
ggarrange(plot1, plot2, ncol = 1, nrow = 2)
# Showing Box plots by maternal parent
nova <- aov(alkaloid_model.residuals ~ Maternal_Parent, data = residual_data_M)
summary(anova)
tukey <- TukeyHSD(anova)
# Showing Box plots by maternal parent
nova <- aov(alkaloid_model.residuals ~ Maternal_Parent, data = residual_data_M)
summary(anova)
# Showing Box plots by maternal parent
as.factor(residual_data_M$Maternal_Parent)
# Showing Box plots by maternal parent
residual_data_M$Maternal_Parent <- as.factor(residual_data_M$Maternal_Parent)
nova <- aov(alkaloid_model.residuals ~ Maternal_Parent, data = residual_data_M)
summary(anova)
ggplot(residual_data_M, aes(x=Maternal_Parent, y=alkaloid_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Fungal to Plant Copy Number Ratio") +
scale_fill_discrete(name = "Plant Lines")
nova <- aov(alkaloid_model.residuals ~ Maternal_Parent, data = residual_data_M)
summary(anova)
anova <- aov(alkaloid_model.residuals ~ Maternal_Parent, data = residual_data_M)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(residual_data_M, Maternal_Parent) %>%
summarise(mean=mean(alkaloid_model.residuals), quant = quantile(alkaloid_model.residuals, probs = .75)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Line)
Tk$cld <- cld$Letters
print(Tk)
print(tukey)
Tk <- group_by(residual_data_M, Maternal_Parent) %>%
summarise(mean=mean(alkaloid_model.residuals), quant = quantile(alkaloid_model.residuals, probs = .75)) %>%
arrange(desc(mean))
group_by(residual_data_M, Maternal_Parent)
group_by(residual_data_M, Maternal_Parent) %>%
summarise(mean=mean(alkaloid_model.residuals), quant = quantile(alkaloid_model.residuals, probs = .75))
group_by(residual_data_M, Maternal_Parent) %>%
summarise(mean=mean(alkaloid_model.residuals), quant = quantile(alkaloid_model.residuals, probs = .75, na.rm = TRUE))
Tk <- group_by(residual_data_M, Maternal_Parent) %>%
summarise(mean=mean(alkaloid_model.residuals), quant = quantile(alkaloid_model.residuals, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Line)
Tk$cld <- cld$Letters
print(Tk)
ggplot(residual_data_M, aes(x=Maternal_Parent, y=alkaloid_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Fungal to Plant Copy Number Ratio") +
scale_fill_discrete(name = "Plant Lines")
ggplot(residual_data_M, aes(x=Maternal_Parent, y=alkaloid_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Fungal to Plant Copy Number Ratio") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Line, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
ggplot(residual_data_M, aes(x=Maternal_Parent, y=alkaloid_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Fungal to Plant Copy Number Ratio") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Maternal_Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
print(Tk)
ggplot(residual_data_M, aes(x=Maternal_Parent, y=alkaloid_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Fungal to Plant Copy Number Ratio") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Maternal_Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
cld
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Line)
Tk$cld <- cld$Letters
print(Tk)
ggplot(residual_data_M, aes(x=Maternal_Parent, y=alkaloid_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Fungal to Plant Copy Number Ratio") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Maternal_Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
print(Tk)
Tk$cld <- cld$Letters
print(Tk)
print(cld)
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Maternal_Parent)
Tk$cld <- cld$Letters
print(Tk)
ggplot(residual_data_M, aes(x=Maternal_Parent, y=alkaloid_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Fungal to Plant Copy Number Ratio") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Maternal_Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
gvlma(alkaloid_model)
subset(residual_data_M, select = -c(Maternal_Parent != "311" | "318" | "319"))
subset(residual_data_M, select = -c(Maternal_Parent != "311" | "318" | "319".))
removeems <- c("311","318","319")
subset(residual_data_M, !(Maternal_Parent %in% removeems))
residual_data_M_2 <- subset(residual_data_M, !(Maternal_Parent %in% removeems))
residual_data_M$Maternal_Parent <- as.factor(residual_data_M$Maternal_Parent)
removeems <- c("311","318","319")
residual_data_M_2 <- subset(residual_data_M, !(Maternal_Parent %in% removeems))
anova <- aov(alkaloid_model.residuals ~ Maternal_Parent, data = residual_data_M_2)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(residual_data_M_2, Maternal_Parent) %>%
summarise(mean=mean(alkaloid_model.residuals), quant = quantile(alkaloid_model.residuals, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Maternal_Parent)
Tk$cld <- cld$Letters
print(Tk)
### Making Boxplot ###
ggplot(residual_data_M_2, aes(x=Maternal_Parent, y=alkaloid_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Fungal to Plant Copy Number Ratio") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Maternal_Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
ggarrange(plot1, plot2, ncol = 1, nrow = 2)
ggplot(residual_data_M, aes(x=filtered_CT_model.residuals, color=Data_Set)) +
geom_histogram(binwidth=.2, fill = "white") +
xlab("Delta CT Residuals")
ggplot(all_Data, aes(x=Delta_CT, color=Data_Set)) +
geom_histogram(binwidth=.2, fill = "white")
ggplot(residual_data_M_2, aes(x=Maternal_Parent, y=filtered_CT_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Fungal to Plant Copy Number Ratio") +
scale_fill_discrete(name = "Plant Lines")
anova <- aov(filtered_CT_model.residuals ~ Maternal_Parent, data = residual_data_M_2)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(residual_data_M_2, Maternal_Parent) %>%
summarise(mean=mean(filtered_CT_model.residuals), quant = quantile(filtered_CT_model.residuals, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Maternal_Parent)
Tk$cld <- cld$Letters
print(Tk)
ggplot(residual_data_M_2, aes(x=Maternal_Parent, y=filtered_CT_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Fungal to Plant Copy Number Ratio") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Maternal_Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
anova <- aov(alkaloid_model.residuals ~ Maternal_Parent, data = residual_data_M_2)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(residual_data_M_2, Maternal_Parent) %>%
summarise(mean=mean(alkaloid_model.residuals), quant = quantile(alkaloid_model.residuals, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Maternal_Parent)
Tk$cld <- cld$Letters
print(Tk)
### Making Boxplot ###
ggplot(residual_data_M_2, aes(x=Maternal_Parent, y=alkaloid_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid Residuals") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Maternal_Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
# Getting the letters for the plots
anova <- aov(filtered_CT_model.residuals ~ Maternal_Parent, data = residual_data_M_2)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(residual_data_M_2, Maternal_Parent) %>%
summarise(mean=mean(filtered_CT_model.residuals), quant = quantile(filtered_CT_model.residuals, probs = .75, na.rm = TRUE)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Maternal_Parent)
Tk$cld <- cld$Letters
print(Tk)
ggplot(residual_data_M_2, aes(x=Maternal_Parent, y=filtered_CT_model.residuals, fill = Maternal_Parent, group=Maternal_Parent)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Delta CT residuals") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Maternal_Parent, y = quant),
vjust = -1.3, hjust = 1.1, size = 5)
# Create a scatter plot
ggplot(residual_data_M, aes(x = alkaloid_model.residuals, y = filtered_CT_model.residuals)) +
geom_point() +
annotate("text", x = -12000, y = 2.4, label = paste("R-squared =", round(rsquared, 3))) +
labs(title = "Scatter Plot with R-squared Value",
x = "Alkaloid Residuals",
y = "Delta CT Residuals")
# Create a scatter plot
ggplot(residual_data_M, aes(x = alkaloid_model.residuals, y = filtered_CT_model.residuals)) +
geom_point(color = Maternal_Parent) +
annotate("text", x = -12000, y = 2.4, label = paste("R-squared =", round(rsquared, 3))) +
labs(title = "Scatter Plot with R-squared Value",
x = "Alkaloid Residuals",
y = "Delta CT Residuals")
# Create a scatter plot
ggplot(residual_data_M, aes(x = alkaloid_model.residuals, y = filtered_CT_model.residuals. color = Maternal_Parent)) +
# Create a scatter plot
ggplot(residual_data_M, aes(x = alkaloid_model.residuals, y = filtered_CT_model.residuals, color = Maternal_Parent)) +
geom_point() +
annotate("text", x = -12000, y = 2.4, label = paste("R-squared =", round(rsquared, 3))) +
labs(title = "Scatter Plot with R-squared Value",
x = "Alkaloid Residuals",
y = "Delta CT Residuals")
# Create a scatter plot
ggplot(residual_data_M, aes(x = alkaloid_model.residuals, y = filtered_CT_model.residuals, color = Maternal_Parent)) +
geom_point() +
annotate("text", x = -12000, y = 2.4, label = paste("R-squared =", round(rsquared, 3))) +
theme_bw() +
labs(title = "Scatter Plot with R-squared Value",
x = "Alkaloid Residuals",
y = "Delta CT Residuals")
################################################################################
# Making graphs more usefull for presentations, with residuals
################################################################################
residual_data_M_2 <- residual_data_M[complete.cases(residual_data_M$alkaloid_model.residuals), ]
View(residual_data_M_2)
################################################################################
# Making graphs more usefull for presentations, with residuals
################################################################################
residual_data_M_2 <- residual_data_M[complete.cases(residual_data_M$alkaloid_model.residuals), ]
write.table(residual_data_M_2, file = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/All_Data_Filtered/residual_data_alkaloid.txt", row.names = FALSE)
################################################################################
# Making graphs more usefull for presentations, with residuals
################################################################################
residual_data_M_2 <- residual_data_M[complete.cases(residual_data_M$filtered_CT_model.residuals), ]
write.table(residual_data_M_2, file = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/All_Data_Filtered/residual_data_CT_Data", row.names = FALSE)
View(residual_data_raw)
View(residual_data)
View(data3)
plot(phenotype_Data$Delta_CT_OG, col = as.factor(phenotype_Data$Extraction_Date))
plot(phenotype_Data$Delta_CT, col = as.factor(phenotype_Data$Extraction_Date))
plot(phenotype_Data$ng.g, col = as.factor(phenotype_Data$Extraction_Date))
# Removing other specific duplicates and outliars
phenotype_Data$Delta_CT[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "306-3-8"] <- NA
phenotype_Data$Delta_CT_OG[phenotype_Data$ID == "320-5-26"] <- NA
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "314" & phenotype_Data$Data_Set != "315x320"), ]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Data_Set == "315x320"),]
phenotype_Data <- phenotype_Data[!(phenotype_Data$ID == "315-1-8" & phenotype_Data$Extraction_Date == "03/16/23"),]
# This is to get the residuals of maternal parent while taking everything out that affects CT values
filtered_CT_model <- aov(Delta_CT ~ Harvest_Date + Standard + Extraction_Date + Extractor+ Data_Set, data = phenotype_Data)
summary(filtered_CT_model) # The filtered data
raw_CT_model <- aov(Delta_CT_OG ~ Harvest_Date + Standard + Extraction_Date + Extractor+ Data_Set, data = phenotype_Data)
summary(raw_CT_model)
alkaloid_model <- lm(ng.g ~ Harvest_Date + Extractor + Extraction_Date + Alkaloid_Plate, data = phenotype_Data)
summary(alkaloid_model)
# extreacting all the residual data and combining it together
Delta_CT_Data <- phenotype_Data[!is.na(phenotype_Data$Delta_CT), ]
Delta_CT_OG_Data <- phenotype_Data[!is.na(phenotype_Data$Delta_CT_OG), ]
Alkaloid_Data <- phenotype_Data[!is.na(phenotype_Data$ng.g), ]
filtered_CT_model <- lm(Delta_CT ~ Harvest_Date + Standard + Extraction_Date + Extractor + Data_Set, data = Delta_CT_Data)
raw_CT_model <- lm(Delta_CT_OG ~ Harvest_Date + Standard + Extraction_Date + Extractor + Data_Set, data = Delta_CT_OG_Data)
alkaloid_model <- lm(ng.g ~ Harvest_Date  + Alkaloid_Plate, data = Alkaloid_Data)
data1 <- data.frame(Delta_CT_Data$ID, filtered_CT_model$residuals)
data2 <- data.frame(Delta_CT_OG_Data$ID, raw_CT_model$residuals)
data3 <- data.frame(Alkaloid_Data$ID, alkaloid_model$residuals)
names(data1)[names(data1) == "Delta_CT_Data.ID"] <- "ID"
names(data2)[names(data2) == "Delta_CT_OG_Data.ID"] <- "ID"
names(data3)[names(data3) == "Alkaloid_Data.ID"] <- "ID"
residual_data <- merge(data1, data2, by = "ID", all = TRUE)
residual_data <- merge(residual_data, data3, by = "ID", all = TRUE)
View(metadata)
################################################################################
# making graphs to compare residual raw vs residual filterd
################################################################################
metadata <- subset(phenotype_Data, select = c("ID", "Maternal_Parent", "Alkaloid_Plate", "Extraction_Date", "Extractor", "Data_Set", "Standard", "Harvest_Date") )
residual_data_M <- merge(residual_data, metadata, by="ID")
residual_data_raw_M <- merge(residual_data_raw, metadata, by="ID")
# Scatter plot of delta CT residuals
CT_Data <- ggplot(residual_data_M, aes(x=ID, y=filtered_CT_model.residuals)) +
geom_point() +
ylim(-5,5) +
theme(axis.text.x = element_blank()) +
labs(title = "Efficiency filtered CT values",
x = "ID",
y = "Delta CT")
CT_Data_raw <- ggplot(residual_data_raw_M, aes(x=ID, y=CT_model_raw.residuals)) +
geom_point() +
ylim(-5,5) +
theme(axis.text.x = element_blank()) +
labs(title = "Raw Data",
x = "ID",
y = "Delta CT")
ggarrange(CT_Data, CT_Data_raw, ncol = 1, nrow = 2)
# Histogram plot of delta CT residuals
plot1 <- ggplot(residual_data_M, aes(x=filtered_CT_model.residuals)) +
geom_histogram(bins = 60, fill = "blue", color = "black") +
ylim(0,250) +
xlim(-8,8) +
labs(title = "Efficiency filtered CT values",
x = "Delta CT Residuals",
y = "Frequency")
plot2 <- ggplot(residual_data_M, aes(x=raw_CT_model.residuals)) +
geom_histogram(bins = 60, fill = "green", color = "black") +
ylim(0,250) +
xlim(-8,8) +
labs(title = "filtered raw CT values",
x = "Delta CT Residuals",
y = "Frequency")
plot3 <- ggplot(residual_data_raw_M, aes(x=CT_model_raw.residuals)) +
geom_histogram(bins = 60, fill = "red", color = "black") +
ylim(0,250) +
xlim(-8,8) +
labs(title = "Unfiltered raw CT values",
x = "Delta CT Residuals",
y = "Frequency")
ggarrange(plot1, plot2, plot3, ncol = 1, nrow = 3)
# Histogram plot of alkaloid residuals
plot2 <- ggplot(residual_data, aes(x=alkaloid_model.residuals)) +
geom_histogram(bins = 60, fill = "blue", color = "black") +
labs(title = "Filtered alkaloid values",
x = "ng per gram",
y = "Frequency")
plot3 <- ggplot(residual_data_raw, aes(x=alkaloid_model_raw.residuals)) +
geom_histogram(bins = 60, fill = "red", color = "black") +
labs(title = "Unfiltered raw alkaloid values",
x = "ng per gram",
y = "Frequency")
ggarrange(plot2, plot3, ncol = 1, nrow = 2)
# Scatter plot to see if we have groupings of stuff
plot5 <- ggplot(residual_data_M, aes(x=Data_Set, y=filtered_CT_model.residuals, color=Data_Set)) +
geom_point() +
theme(axis.text.x = element_blank()) +
labs(title = "Efficiency Filtered Delta CT Values",
x = "ID",
y = "Delta CT")
plot6 <- ggplot(residual_data_M, aes(x=Data_Set, y=raw_CT_model.residuals, color=Data_Set)) +
geom_point() +
theme(axis.text.x = element_blank()) +
labs(title = "Filtered Raw Delta CT Values",
x = "ID",
y = "Delta CT")
plot7 <- ggplot(residual_data_raw_M, aes(x=Data_Set, y=CT_model_raw.residuals, color=Data_Set)) +
geom_point() +
labs(title = "Unfiltered Delta CT Values",
x = "ID",
y = "Delta CT")
ggarrange(plot5, plot6, plot7, ncol = 1, nrow = 3)
# scatterplot plot of alkaloid residuals
plot7 <- ggplot(residual_data_M, aes(x=Alkaloid_Plate, y=alkaloid_model.residuals, color=Alkaloid_Plate)) +
geom_point() +
labs(title = "Filtered Alkaloid Values",
x = "ID",
y = "ng/g")
plot8 <- ggplot(residual_data_raw_M, aes(x=Alkaloid_Plate, y=alkaloid_model_raw.residuals, color=Alkaloid_Plate)) +
geom_point() +
labs(title = "Unfiltered Alkaloid Values",
x = "ID",
y = "ng/g")
ggarrange(plot7, plot8, ncol = 1, nrow = 2)
################################################################################
# Making graphs more usefull for presentations, with residuals
################################################################################
write.table(residual_data_M, file = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/All_Data_Filtered/residual_data.txt", row.names = FALSE)
### The 16 pc GLM with 1 permutations residule data
GLM_16_PCs_loc <- "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Hap_Map/Linear_Models/GLM_16PCs_1_perm_residules.txt"
View(GLM_16_PCs)
GLM_16_PCs <- read.csv(GLM_16_PCs_loc, header = TRUE, strip.white=TRUE, sep = '\t')
GLM_16_PCs$Chr<-gsub("PTG","",as.character(GLM_16_PCs$Chr))
GLM_16_PCs$Chr<-gsub("L","",as.character(GLM_16_PCs$Chr))
GLM_16_PCs$Chr<- as.numeric(GLM_16_PCs$Chr)
GLM_16_PCs <- GLM_16_PCs[-c(1), ]
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple"))
### The 16 pc GLM with 1 permutations residule data
GLM_16_PCs_loc <- "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Hap_Map/Linear_Models/GLM_16PCs_1_perm_residules.txt"
GLM_16_PCs <- read.csv(GLM_16_PCs_loc, header = TRUE, strip.white=TRUE, sep = '\t')
GLM_16_PCs == GLM_16_PCs[GLM_16_PCs$Trait == alkaloid_model.residuals, ]
GLM_16_PCs$Chr<-gsub("PTG","",as.character(GLM_16_PCs$Chr))
GLM_16_PCs$Chr<-gsub("L","",as.character(GLM_16_PCs$Chr))
GLM_16_PCs$Chr<- as.numeric(GLM_16_PCs$Chr)
GLM_16_PCs <- GLM_16_PCs[-c(1), ]
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple"))
GLM_16_PCs == GLM_16_PCs[GLM_16_PCs$Trait == "alkaloid_model.residuals", ]
GLM_16_PCs == GLM_16_PCs[GLM_16_PCs$Trait == "alkaloid_model.residuals", ]
target_category <- "alkaloid_model.residuals"
GLM_16_PCs == GLM_16_PCs[GLM_16_PCs$Trait == target_category, ]
GLM_16_PCs <- GLM_16_PCs[GLM_16_PCs$Trait == "alkaloid_model.residuals", ]
GLM_16_PCs$Chr<-gsub("PTG","",as.character(GLM_16_PCs$Chr))
GLM_16_PCs$Chr<-gsub("L","",as.character(GLM_16_PCs$Chr))
GLM_16_PCs$Chr<- as.numeric(GLM_16_PCs$Chr)
GLM_16_PCs <- GLM_16_PCs[-c(1), ]
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple"))
### The 16 pc GLM with 1 permutations residule data
GLM_16_PCs_loc <- "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Hap_Map/Linear_Models/GLM_16PCs_1_perm_residules.txt"
GLM_16_PCs <- read.csv(GLM_16_PCs_loc, header = TRUE, strip.white=TRUE, sep = '\t')
GLM_16_PCs <- GLM_16_PCs[GLM_16_PCs$Trait == "filtered_CT_model.residuals", ]
# GLM_16_PCs <- GLM_16_PCs[GLM_16_PCs$Trait == "alkaloid_model.residuals", ]
GLM_16_PCs$Chr<-gsub("PTG","",as.character(GLM_16_PCs$Chr))
GLM_16_PCs$Chr<-gsub("L","",as.character(GLM_16_PCs$Chr))
GLM_16_PCs$Chr<- as.numeric(GLM_16_PCs$Chr)
GLM_16_PCs <- GLM_16_PCs[-c(1), ]
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple"))
### The 16 pc GLM with 1 permutations residule data
GLM_16_PCs_loc <- "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Hap_Map/Linear_Models/GLM_16PCs_1_perm_residules.txt"
GLM_16_PCs <- read.csv(GLM_16_PCs_loc, header = TRUE, strip.white=TRUE, sep = '\t')
# GLM_16_PCs <- GLM_16_PCs[GLM_16_PCs$Trait == "filtered_CT_model.residuals", ]
GLM_16_PCs <- GLM_16_PCs[GLM_16_PCs$Trait == "alkaloid_model.residuals", ]
GLM_16_PCs$Chr<-gsub("PTG","",as.character(GLM_16_PCs$Chr))
GLM_16_PCs$Chr<-gsub("L","",as.character(GLM_16_PCs$Chr))
GLM_16_PCs$Chr<- as.numeric(GLM_16_PCs$Chr)
GLM_16_PCs <- GLM_16_PCs[-c(1), ]
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple"))
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple")) +
ylim(5)
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple")) +
ylim(0, 5)
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple")) +
coord_cartesian(ylim = c(0, 8))
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker",
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple"))
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker", ylim = c(0, 10),
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple"))
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker", ylim = c(0, 6),
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple"))
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker", ylim = c(0, 4.2),
main = "P values of Delta CT", cex = 1, col = c("blue", "red","darkgrey","purple"))
manhattan(GLM_16_PCs, chr = "Chr", bp = "Pos", p = "p", snp = "Marker", ylim = c(0, 4.2),
main = "P values of Alkaloid Data", cex = 1, col = c("blue", "red","darkgrey","purple"))
