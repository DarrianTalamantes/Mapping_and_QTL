data <- data.frame(N = N_list, H = H_list)
H_plot <- ggplot(data, aes(x = N, y = H)) +
geom_point(color = "blue", size = 3) +  # Add points
geom_line(color = "red") +             # Add a line connecting the points
labs(title = "N vs Heritability",
x = "N",
y = "Heritability") +
theme_bw()
return(H_plot)
}
# Remove the furthest point from the mean
cat("Heritability is ",heritability," which is unacceptable\n")
mean_trait <- mean(pheno_data[[trait]], na.rm = TRUE)
abs_diff <- abs(pheno_data[[trait]] - mean_trait)
furthest_index <- which.max(abs_diff)
cat("Removing index:", pheno_data$ID[furthest_index], "with value:", pheno_data[[trait]][furthest_index], "\n")
removed_individuals <- c(removed_individuals, pheno_data$ID[furthest_index])  # Store removed individual
pheno_data <- pheno_data[-furthest_index, ]  # Remove the individual
heritability_old <- results$H[1]      # Update old heritability
removals <- removals + 1
}
# Add removed individuals to the results
# Graphing the final product
data <- data.frame(N = N_list, H = H_list)
H_plot <- ggplot(data, aes(x = N, y = H)) +
geom_point(color = "blue", size = 3) +  # Add points
geom_line(color = "red") +             # Add a line connecting the points
labs(title = "N vs Heritability",
x = "N",
y = "Heritability") +
theme_bw()
return(H_plot)
}
plot_avg_310_alk <- graph_heritability(Residual_data_avg_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res", 14, .04)
plot_avg_310_alk
plot_avg_312_alk <- graph_heritability(Residual_data_avg_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res", 14, .04)
plot_avg_312_alk
plot_avg_310_ct <- graph_heritability(Residual_data_avg_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
plot_avg_310_ct
stats_avg_310_alk
plot_avg_310_alk <- graph_heritability(Residual_data_avg_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res", 14, .04)
plot_avg_310_alk
graph_heritability <- function(pheno_data, geno_matrix, trait, max_removals = 14, Hdif = .04) {
removals <- 0
removed_individuals <- character()  # Initialize an empty vector to store removed IDs
heritability_old = 100
N_list <- c()
H_list <- c()
while (removals < max_removals) {
results <- find_heritability(pheno_data, geno_matrix, trait)
heritability <- results$H[1]  # Extract heritability
heritability_dif <- abs(heritability - heritability_old)
# Append the current N and H values
N_list <- c(N_list, nrow(pheno_data))
H_list <- c(H_list, heritability)
cat("######################## \n")
cat("N_list new value ", N_list, "\n")
cat("H_list new value ", H_list, "\n")
if (heritability_dif <= Hdif && heritability != 0) {
cat("Heritability difference is ",heritability_dif," which is acceptable. Returning results.\n")
# Add removed individuals to the results
results$RemovedIndividuals <- paste(removed_individuals, collapse = ", ")
# Remove and calculate 2 more before finishing.
cat("Removing one more before finishing \n")
mean_trait <- mean(pheno_data[[trait]], na.rm = TRUE)
abs_diff <- abs(pheno_data[[trait]] - mean_trait)
furthest_index <- which.max(abs_diff)
cat("Removing index:", pheno_data$ID[furthest_index], "with value:", pheno_data[[trait]][furthest_index], "\n")
removed_individuals <- c(removed_individuals, pheno_data$ID[furthest_index])  # Store removed individual
pheno_data <- pheno_data[-furthest_index, ]  # Remove the individual
heritability_old <- results$H[1]
removals <- removals + 1
results <- find_heritability(pheno_data, geno_matrix, trait)
heritability <- results$H[1]  # Extract heritability
heritability_dif <- abs(heritability - heritability_old)
# Append the current N and H values
N_list <- c(N_list, nrow(pheno_data))
H_list <- c(H_list, heritability)
# Graphing the final product
data <- data.frame(N = N_list, H = H_list)
H_plot <- ggplot(data, aes(x = N, y = H)) +
geom_point(color = "blue", size = 3) +  # Add points
geom_line(color = "red") +             # Add a line connecting the points
labs(title = "N vs Heritability",
x = "N",
y = "Heritability") +
theme_bw()
return(list(graph = H_plot, Hdata = data))
}
# Remove the furthest point from the mean
cat("Heritability difference is ",heritability_dif," which is unacceptable\n")
mean_trait <- mean(pheno_data[[trait]], na.rm = TRUE)
abs_diff <- abs(pheno_data[[trait]] - mean_trait)
furthest_index <- which.max(abs_diff)
cat("Removing index:", pheno_data$ID[furthest_index], "with value:", pheno_data[[trait]][furthest_index], "\n")
removed_individuals <- c(removed_individuals, pheno_data$ID[furthest_index])  # Store removed individual
pheno_data <- pheno_data[-furthest_index, ]  # Remove the individual
heritability_old <- results$H[1]      # Update old heritability
removals <- removals + 1
}
# Add removed individuals to the results
# Graphing the final product
data <- data.frame(N = N_list, H = H_list)
H_plot <- ggplot(data, aes(x = N, y = H)) +
geom_point(color = "blue", size = 3) +  # Add points
geom_line(color = "red") +             # Add a line connecting the points
labs(title = "N vs Heritability",
x = "N",
y = "Heritability") +
theme_bw()
return(list(graph = H_plot, Hdata = data))
}
plot_avg_310_alk <- graph_heritability(Residual_data_avg_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res", 14, .04)
plot_avg_310_alk
plot_avg_310_alk$graph
plot_avg_310_alk$Hdata
graph_heritability <- function(pheno_data, geno_matrix, trait, max_removals = 14, Hdif = .04) {
removals <- 0
removed_individuals <- character()  # Initialize an empty vector to store removed IDs
heritability_old = 100
N_list <- c()
H_list <- c()
while (removals < max_removals) {
results <- find_heritability(pheno_data, geno_matrix, trait)
heritability <- results$H[1]  # Extract heritability
heritability_dif <- abs(heritability - heritability_old)
# Append the current N and H values
N_list <- c(N_list, nrow(pheno_data))
H_list <- c(H_list, heritability)
cat("######################## \n")
cat("N_list new value ", N_list, "\n")
cat("H_list new value ", H_list, "\n")
if (heritability_dif <= Hdif && heritability != 0) {
cat("Heritability difference is ",heritability_dif," which is acceptable. Returning results.\n")
# Add removed individuals to the results
results$RemovedIndividuals <- paste(removed_individuals, collapse = ", ")
# Remove and calculate 2 more before finishing.
cat("Removing one more before finishing \n")
mean_trait <- mean(pheno_data[[trait]], na.rm = TRUE)
abs_diff <- abs(pheno_data[[trait]] - mean_trait)
furthest_index <- which.max(abs_diff)
cat("Removing index:", pheno_data$ID[furthest_index], "with value:", pheno_data[[trait]][furthest_index], "\n")
removed_individuals <- c(removed_individuals, pheno_data$ID[furthest_index])  # Store removed individual
pheno_data <- pheno_data[-furthest_index, ]  # Remove the individual
heritability_old <- results$H[1]
removals <- removals + 1
results <- find_heritability(pheno_data, geno_matrix, trait)
heritability <- results$H[1]  # Extract heritability
heritability_dif <- abs(heritability - heritability_old)
# Append the current N and H values
N_list <- c(N_list, nrow(pheno_data))
H_list <- c(H_list, heritability)
# Graphing the final product
data <- data.frame(N = N_list, H = H_list)
H_plot <- ggplot(data, aes(x = N, y = H)) +
geom_point(color = "blue", size = 3) +  # Add points
geom_line(color = "red") +             # Add a line connecting the points
labs(title = "N vs Heritability",
x = "N",
y = "Heritability") +
theme_bw()
return(list(graph = H_plot, Hdata = data, removed = removed_individuals))
}
# Remove the furthest point from the mean
cat("Heritability difference is ",heritability_dif," which is unacceptable\n")
mean_trait <- mean(pheno_data[[trait]], na.rm = TRUE)
abs_diff <- abs(pheno_data[[trait]] - mean_trait)
furthest_index <- which.max(abs_diff)
cat("Removing index:", pheno_data$ID[furthest_index], "with value:", pheno_data[[trait]][furthest_index], "\n")
removed_individuals <- c(removed_individuals, pheno_data$ID[furthest_index])  # Store removed individual
pheno_data <- pheno_data[-furthest_index, ]  # Remove the individual
heritability_old <- results$H[1]      # Update old heritability
removals <- removals + 1
}
# Add removed individuals to the results
# Graphing the final product
data <- data.frame(N = N_list, H = H_list)
H_plot <- ggplot(data, aes(x = N, y = H)) +
geom_point(color = "blue", size = 3) +  # Add points
geom_line(color = "red") +             # Add a line connecting the points
labs(title = "N vs Heritability",
x = "N",
y = "Heritability") +
theme_bw()
return(list(graph = H_plot, Hdata = data, removed = removed_individuals))
}
plot_avg_310_alk <- graph_heritability(Residual_data_avg_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res", 14, .04)
plot_avg_310_alk$removed
plot_avg_310_alk <- graph_heritability(Residual_data_avg_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res", 14, .04)
plot_avg_312_alk <- graph_heritability(Residual_data_avg_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res", 14, .04)
plot_avg_star_alk <- graph_heritability(Residual_data_avg_outliars_rm, geno_matrix, trait = "Alkaloids_Res")
plot_avg_310_ct <- graph_heritability(Residual_data_avg_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
plot_avg_312_ct <- graph_heritability(Residual_data_avg_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
plot_avg_star_ct <- graph_heritability(Residual_data_avg_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res")
plot_2023_310_alk <- graph_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res")
plot_2023_312_alk <- graph_heritability(Residual_Data_23_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res")
plot_2023_star_alk <- graph_heritability(Residual_Data_23_outliars_rm, geno_matrix, trait = "Alkaloids_Res")
plot_2023_310_ct <-graph_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
plot_2023_312_ct <- graph_heritability(Residual_Data_23_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
plot_2023_star_ct <- graph_heritability(Residual_Data_23_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res")
plot_2024_310_alk <- graph_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res")
plot_2024_312_alk <- graph_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res")
plot_2024_star_alk <- graph_heritability(Residual_Data_24_outliars_rm, geno_matrix, trait = "Alkaloids_Res")
plot_2024_310_ct <- graph_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
plot_2024_312_ct <- graph_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
plot_2024_star_ct <- graph_heritability(Residual_Data_24_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res")
# Plot for avg data
# Create overall titles
title_avg <- textGrob("Average Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 312 Star", gp = gpar(fontsize = 16), vjust = -1)
y_axis <- textGrob("Alkaloids /n CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# Plot for avg data
# Create overall titles
title_avg <- textGrob("Average Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t 312 \t Star", gp = gpar(fontsize = 16), vjust = -1)
y_axis <- textGrob("Alkaloids \t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# Plot for avg data
# Create overall titles
title_avg <- textGrob("Average Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t 312 \t\t\t Star", gp = gpar(fontsize = 16), vjust = -1)
y_axis <- textGrob("Alkaloids \t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# Plot for avg data
# Create overall titles
title_avg <- textGrob("Average Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t\t 312 \t\t\t\t Star", gp = gpar(fontsize = 16), vjust = -1)
y_axis <- textGrob("Alkaloids \t\t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# Plot for avg data
# Create overall titles
title_avg <- textGrob("Average Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("\n 310 \t\t\t\t 312 \t\t\t\t Star", gp = gpar(fontsize = 16), vjust = -1)
y_axis <- textGrob("Alkaloids \t\t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# Plot for avg data
# Create overall titles
title_avg <- textGrob("Average Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t\t 312 \t\t\t\t Star", gp = gpar(fontsize = 16), vjust = -2)
y_axis <- textGrob("Alkaloids \t\t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# Plot for avg data
# Create overall titles
title_avg <- textGrob("Average Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t\t 312 \t\t\t\t Star", gp = gpar(fontsize = 16), vjust = 2)
y_axis <- textGrob("Alkaloids \t\t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
x_axis <- textGrob("310 \t\t\t\t 312 \t\t\t\t Star", gp = gpar(fontsize = 16), vjust = 1)
y_axis <- textGrob("Alkaloids \t\t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# Plot for avg data
# Create overall titles
title_avg <- textGrob("Average Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t\t 312 \t\t\t\t Star", gp = gpar(fontsize = 16), vjust = )
y_axis <- textGrob("Alkaloids \t\t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
x_axis <- textGrob("310 \t\t\t\t 312 \t\t\t\t Star", gp = gpar(fontsize = 16), vjust = -.5)
y_axis <- textGrob("Alkaloids \t\t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# Plot for avg data
# Create overall titles
title_avg <- textGrob("Average Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t\t\t 312 \t\t\t\t\t Star", gp = gpar(fontsize = 16), vjust = -.5)
y_axis <- textGrob("Alkaloids \t\t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# Plot for 2023 data
# Create overall titles
title_avg <- textGrob("2023 Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t\t\t 312 \t\t\t\t\t Star", gp = gpar(fontsize = 16), vjust = -.5)
y_axis <- textGrob("Alkaloids \t\t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_2023_310_alk$graph, plot_2023_312_alk$graph, plot_2023_star_alk$graph,
plot_2023_310_ct$graph,plot_2023_312_ct$graph,plot_2023_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
stats_2023_star_ct <- refine_heritability(Residual_Data_23_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res", 15, .60)
# Plot for 2024 data
# Create overall titles
title_avg <- textGrob("2024 Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t\t\t 312 \t\t\t\t\t Star", gp = gpar(fontsize = 16), vjust = -.5)
y_axis <- textGrob("Alkaloids \t\t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_2024_310_alk$graph, plot_2024_312_alk$graph, plot_2024_star_alk$graph,
plot_2024_310_ct$graph,plot_2024_312_ct$graph,plot_2024_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
Residual_Data_24_outliars_rm_314x310
stats_2024_310_alk <- refine_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res", 15, .60)
Residual_Data_24_outliars_rm_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm_314x310.txt", header = TRUE)
stats_2024_312_ct <- refine_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
plot_2024_312_ct <- graph_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
H_2024_312_ct <- stats_2024_312_ct$H[1]
H_2024_312_ct
plot_2024_312_ct <- graph_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
plot_2024_310_ct <- graph_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
plot_2024_310_ct$graph
# Plot for 2024 data
# Create overall titles
title_avg <- textGrob("2024 Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t\t\t 312 \t\t\t\t\t Star", gp = gpar(fontsize = 16), vjust = -.5)
y_axis <- textGrob("Alkaloids \t\t CT Ratio", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_2024_310_alk$graph, plot_2024_312_alk$graph, plot_2024_star_alk$graph,
plot_2024_310_ct$graph,plot_2024_312_ct$graph,plot_2024_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
plot_2024_310_ct$graph
# Plot for avg data
# Create overall titles
title_avg <- textGrob("Average Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t\t\t 312 \t\t\t\t\t Star", gp = gpar(fontsize = 16), vjust = -.5)
y_axis <- textGrob("CT Ratio \t\t Alkaloids", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_avg_310_alk$graph, plot_avg_312_alk$graph, plot_avg_star_alk$graph,
plot_avg_310_ct$graph,plot_avg_312_ct$graph,plot_avg_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# Plot for 2023 data
# Create overall titles
title_avg <- textGrob("2023 Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t\t\t 312 \t\t\t\t\t Star", gp = gpar(fontsize = 16), vjust = -.5)
y_axis <- textGrob("CT Ratio \t\t Alkaloids", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_2023_310_alk$graph, plot_2023_312_alk$graph, plot_2023_star_alk$graph,
plot_2023_310_ct$graph,plot_2023_312_ct$graph,plot_2023_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# Plot for 2024 data
# Create overall titles
title_avg <- textGrob("2024 Data", gp = gpar(fontsize = 20, fontface = "bold"))
x_axis <- textGrob("310 \t\t\t\t\t 312 \t\t\t\t\t Star", gp = gpar(fontsize = 16), vjust = -.5)
y_axis <- textGrob("CT Ratio \t\t Alkaloids", gp = gpar(fontsize = 16), rot = 90)
# Arrange plots with grid.arrange
avg_H_plot <- grid.arrange(
arrangeGrob(plot_2024_310_alk$graph, plot_2024_312_alk$graph, plot_2024_star_alk$graph,
plot_2024_310_ct$graph,plot_2024_312_ct$graph,plot_2024_star_ct$graph,
ncol = 3, nrow = 2),  # Add your plots here
top = title_avg,                             # Add the top title
bottom = x_axis,                             # Add the x-axis title
left = y_axis                                # Add the y-axis title
)
# stats_2023_star_ct <- refine_heritability(Residual_Data_23_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res", 15, .60)
# H_2023_star_ct <- stats_2023_star_ct$H[1]
#
# # Just the 2024 Heritabilities
# stats_2024_310_alk <- refine_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res", 15, .60)
# H_2024_310_alk <- stats_2024_310_alk$H[1]
#
# stats_2024_312_alk <- refine_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res", 20, .60)
# H_2024_312_alk <- stats_2024_312_alk$H[1]
#
stats_2024_star_alk <- refine_heritability(Residual_Data_24_outliars_rm, geno_matrix, trait = "Alkaloids_Res")
stats_2024_star_alk
# stats_2023_star_ct <- refine_heritability(Residual_Data_23_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res", 15, .60)
# H_2023_star_ct <- stats_2023_star_ct$H[1]
#
# # Just the 2024 Heritabilities
# stats_2024_310_alk <- refine_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res", 15, .60)
# H_2024_310_alk <- stats_2024_310_alk$H[1]
#
# stats_2024_312_alk <- refine_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res", 20, .60)
# H_2024_312_alk <- stats_2024_312_alk$H[1]
#
stats_2024_star_alk <- refine_heritability(Residual_Data_24_outliars_rm, geno_matrix, trait = "Alkaloids_Res", 20, .60)
stats_2024_star_alk
refine_heritability <- function(pheno_data, geno_matrix, trait, max_removals = 5, Hcap = .65, Hmin = .03) {
removals <- 0
removed_individuals <- character()  # Initialize an empty vector to store removed IDs
while (removals < max_removals) {
results <- find_heritability(pheno_data, geno_matrix, trait)
heritability <- results$H[1]  # Extract heritability
if (heritability >= Hmin && heritability <= Hcap) {
cat("Heritability is ",heritability," which is acceptable. Returning results.\n")
# Add removed individuals to the results
results$RemovedIndividuals <- paste(removed_individuals, collapse = ", ")
return(results)
}
# Remove the furthest point from the mean
cat("Heritability is ",heritability," which is unacceptable\n")
mean_trait <- mean(pheno_data[[trait]], na.rm = TRUE)
abs_diff <- abs(pheno_data[[trait]] - mean_trait)
furthest_index <- which.max(abs_diff)
cat("Removing index:", pheno_data$ID[furthest_index], "with value:", pheno_data[[trait]][furthest_index], "\n")
removed_individuals <- c(removed_individuals, pheno_data$ID[furthest_index])  # Store removed individual
pheno_data <- pheno_data[-furthest_index, ]  # Remove the individual
removals <- removals + 1
}
# Add removed individuals to the results
cat("Heritability could not get into acceptable range, returning last results table\n")
results$RemovedIndividuals <- paste(removed_individuals, collapse = ", ")
return(results)
}
# stats_2023_310_ct <- refine_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res", 15, .6)
# H_2023_310_ct <- stats_2023_310_ct$H[1]
#
# stats_2023_312_ct <- refine_heritability(Residual_Data_23_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
# H_2023_312_ct <- stats_2023_312_ct$H[1]
#
# stats_2023_star_ct <- refine_heritability(Residual_Data_23_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res", 15, .60)
# H_2023_star_ct <- stats_2023_star_ct$H[1]
#
# # Just the 2024 Heritabilities
stats_2024_310_alk <- refine_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res", 15, .60)
