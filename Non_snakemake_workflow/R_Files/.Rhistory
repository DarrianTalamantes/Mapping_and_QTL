# Objective: This code will explore the phenotype data, specifically the alklaoid data
# Import libraries
library(tidyverse)
library(multcompView)
#Loading in data
alklaoid_loc="/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/Alkaloid_Data.csv"
CT_Values_loc = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/Phenotype_Data_Delta_CT.txt"
alklaoid <- read.csv(alklaoid_loc, header = TRUE, strip.white=TRUE)
CT_Values <- read.table(CT_Values_loc, header = TRUE, strip.white=TRUE)
# Giving data parents
alklaoid[c('Maternal_Parent', 'DeleteMe')] <- str_split_fixed(alklaoid$ID, '-', 2)
alklaoid <- subset(alklaoid, select = -c(DeleteMe))
#Merging the data
colnames(CT_Values)[colnames(CT_Values) == "Treatment"] ="ID"
phenotype_Data <- merge(CT_Values, alklaoid, by.x = c("ID"), by.y = c("ID"))
colnames(phenotype_Data)[colnames(phenotype_Data) == "Plate"] ="Alkaloid_Plate"
phenotype_Data <- subset(phenotype_Data, select = -c(Maternal_Parent.y))
phenotype_Data$Maternal_Parent.x <- toString(phenotype_Data$Maternal_Parent.x)
# Making letters for groups
# Making letters for box plot
anova <- aov(ng.g ~ Maternal_Parent.x, data = phenotype_Data)
# Making letters for groups
# Making letters for box plot
anova <- aov(ng.g ~ Maternal_Parent.x, data = phenotype_Data)
View(phenotype_Data)
#Loading in data
alklaoid_loc="/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/Alkaloid_Data.csv"
CT_Values_loc = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/Phenotype_Data_Delta_CT.txt"
alklaoid <- read.csv(alklaoid_loc, header = TRUE, strip.white=TRUE)
CT_Values <- read.table(CT_Values_loc, header = TRUE, strip.white=TRUE)
# Giving data parents
alklaoid[c('Maternal_Parent', 'DeleteMe')] <- str_split_fixed(alklaoid$ID, '-', 2)
alklaoid <- subset(alklaoid, select = -c(DeleteMe))
#Merging the data
colnames(CT_Values)[colnames(CT_Values) == "Treatment"] ="ID"
phenotype_Data <- merge(CT_Values, alklaoid, by.x = c("ID"), by.y = c("ID"))
colnames(phenotype_Data)[colnames(phenotype_Data) == "Plate"] ="Alkaloid_Plate"
phenotype_Data <- subset(phenotype_Data, select = -c(Maternal_Parent.y))
phenotype_Data$Maternal_Parent.x <- str(Maternal_Parent.x)
str(phenotype_Data$Maternal_Parent.x)
str(phenotype_Data$Maternal_Parent.x)
phenotype_Data$Maternal_Parent.x <- str(phenotype_Data$Maternal_Parent.x)
#Loading in data
alklaoid_loc="/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/Alkaloid_Data.csv"
CT_Values_loc = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/Phenotype_Data_Delta_CT.txt"
alklaoid <- read.csv(alklaoid_loc, header = TRUE, strip.white=TRUE)
CT_Values <- read.table(CT_Values_loc, header = TRUE, strip.white=TRUE)
# Giving data parents
alklaoid[c('Maternal_Parent', 'DeleteMe')] <- str_split_fixed(alklaoid$ID, '-', 2)
alklaoid <- subset(alklaoid, select = -c(DeleteMe))
#Merging the data
colnames(CT_Values)[colnames(CT_Values) == "Treatment"] ="ID"
phenotype_Data <- merge(CT_Values, alklaoid, by.x = c("ID"), by.y = c("ID"))
colnames(phenotype_Data)[colnames(phenotype_Data) == "Plate"] ="Alkaloid_Plate"
phenotype_Data <- subset(phenotype_Data, select = -c(Maternal_Parent.y))
phenotype_Data$Maternal_Parent.x <- str(phenotype_Data$Maternal_Parent.x)
#Loading in data
alklaoid_loc="/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/Alkaloid_Data.csv"
CT_Values_loc = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Phenotype_Data/Phenotype_Data_Delta_CT.txt"
alklaoid <- read.csv(alklaoid_loc, header = TRUE, strip.white=TRUE)
CT_Values <- read.table(CT_Values_loc, header = TRUE, strip.white=TRUE)
# Giving data parents
alklaoid[c('Maternal_Parent', 'DeleteMe')] <- str_split_fixed(alklaoid$ID, '-', 2)
alklaoid <- subset(alklaoid, select = -c(DeleteMe))
#Merging the data
colnames(CT_Values)[colnames(CT_Values) == "Treatment"] ="ID"
phenotype_Data <- merge(CT_Values, alklaoid, by.x = c("ID"), by.y = c("ID"))
colnames(phenotype_Data)[colnames(phenotype_Data) == "Plate"] ="Alkaloid_Plate"
phenotype_Data <- subset(phenotype_Data, select = -c(Maternal_Parent.y))
# Making letters for groups
# Making letters for box plot
anova <- aov(ng.g ~ Maternal_Parent.x, data = phenotype_Data)
summary(anova)
as.charachter(phenotype_Data$Maternal_Parent.x)
as.character(phenotype_Data$Maternal_Parent.x)
phenotype_Data$Maternal_Parent.x <- as.character(phenotype_Data$Maternal_Parent.x)
# Making letters for groups
# Making letters for box plot
anova <- aov(ng.g ~ Maternal_Parent.x, data = phenotype_Data)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
Tk <- group_by(phenotype_Data, Maternal_Parent.y) %>%
summarise(mean=mean(ng.g), quant = quantile(ng.g, probs = .75)) %>%
arrange(desc(mean))
print(tukey)
Tk <- group_by(phenotype_Data, Maternal_Parent.x) %>%
summarise(mean=mean(ng.g), quant = quantile(ng.g, probs = .75)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Maternal_Parent.x)
Tk$cld <- cld$Letters
print(Tk)
# Boxplots
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=ng.g, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Fungal to Plant Copy Number Ratio") +
scale_fill_discrete(name = "Plant Lines") +
coord_cartesian(ylim = c(.7, 1.6)) +
geom_text(data = Tk, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -1.5 , size = 5)
# Boxplots
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=ng.g, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = Tk, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -1.5 , size = 5)
# Making letters for box plot biomass
anova <- aov(ng.g ~ Maternal_Parent.x, data = phenotype_Data)
summary(anova)
tukey <- TukeyHSD(anova)
print(tukey)
TkA <- group_by(phenotype_Data, Maternal_Parent.x) %>%
summarise(mean=mean(ng.g), quant = quantile(ng.g, probs = .75)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anova, tukey) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Maternal_Parent.x)
TkA$cld <- cld$Letters
print(TkA)
# Boxplots Alkaloids
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=ng.g, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkA, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -1.5 , size = 5)
# Making letters for box plot biomass
anovaD <- aov(ng.g ~ Maternal_Parent.x, data = Delta_CT)
# Making letters for box plot biomass
anovaD <- aov(Delta_CT ~ Maternal_Parent.x, data = phenotype_Data)
summary(anovaD)
tukeyD <- TukeyHSD(anovaD)
print(tukeyD)
TkD <- group_by(phenotype_Data, Maternal_Parent.x) %>%
summarise(mean=mean(ng.g), quant = quantile(ng.g, probs = .75)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anovaD, tukeyD) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Maternal_Parent.x)
TkD$cld <- cld$Letters
print(TkD)
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkA, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -1.5 , size = 5)
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkD, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -1.5 , size = 5)
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
coord_cartesian(ylim = c(-10, 20)) +
geom_text(data = TkD, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -1.5 , size = 5)
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
coord_cartesian(ylim = c(-10, 20)) +
geom_text(data = TkD, aes(label = cld, x = Maternal_Parent.x, y = quant),
size = 5)
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
coord_cartesian(ylim = c(-10, 25)) +
geom_text(data = TkD, aes(label = cld, x = Maternal_Parent.x, y = quant))
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkD, aes(label = cld, x = Maternal_Parent.x, y = quant))
View(TkD)
anovaD <- aov(Delta_CT ~ Maternal_Parent.x, data = phenotype_Data)
summary(anovaD)
tukeyD <- TukeyHSD(anovaD)
print(tukeyD)
TkD <- group_by(phenotype_Data, Maternal_Parent.x) %>%
summarise(mean=mean(ng.g), quant = quantile(ng.g, probs = .75)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anovaD, tukeyD) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Maternal_Parent.x)
TkD$cld <- cld$Letters
print(TkD)
View(TkA)
# Making letters for box plot biomass
anovaD <- aov(Delta_CT ~ Maternal_Parent.x, data = phenotype_Data)
summary(anovaD)
tukeyD <- TukeyHSD(anovaD)
print(tukeyD)
TkD <- group_by(phenotype_Data, Maternal_Parent.x) %>%
summarise(mean=mean(Delta_CT), quant = quantile(Delta_CT, probs = .75)) %>%
arrange(desc(mean))
cld <- multcompLetters4(anovaD, tukeyD) #forgot why we do this
print(cld)
cld <- as.data.frame.list(cld$Maternal_Parent.x)
TkD$cld <- cld$Letters
print(TkD)
# Boxplots Alkaloids
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=ng.g, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkA, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -1.5 , size = 5)
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkD, aes(label = cld, x = Maternal_Parent.x, y = quant))
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkD, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -1.5 , size = 5)
# Boxplots Alkaloids
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=ng.g, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkA, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -1.5 , size = 5)
# Boxplots Alkaloids
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=ng.g, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkA, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -2.5 , size = 5)
# Boxplots Alkaloids
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=ng.g, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkA, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -25 , size = 5)
# Boxplots Alkaloids
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=ng.g, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkA, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = 2.5 , size = 5)
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkD, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = -1.5 , size = 5)
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkD, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = 1.5 , size = 5)
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkD, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = 1 , size = 5)
# Boxplots Alkaloids
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=ng.g, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkA, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = 2.5 , size = 5)
# Boxplots biomass
ggplot(phenotype_Data, aes(x=Maternal_Parent.x, y=Delta_CT, fill = Maternal_Parent.x, group=Maternal_Parent.x)) +
geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4) +
theme_bw() +
xlab("Plant Lines") +
ylab("Alkaloid") +
scale_fill_discrete(name = "Plant Lines") +
geom_text(data = TkD, aes(label = cld, x = Maternal_Parent.x, y = quant),
vjust = 1 , size = 5)
# Saving the data to make a photype file
file_to_save <- subset(phenotype_Data, select = c("ID", "Delta_CT", "ng.g"))
colnames(phenotype_Data)[colnames(phenotype_Data) == "ng.g"] ="Alkaloid"
write.csv(phenotype_Data, file = "phenotype_data.txt")
write.table(phenotype_Data, file = "phenotype_data.txt")
write.table(phenotype_Data, file = "phenotype_data.txt", row.names = FALSE)
# Saving the data to make a photype file
file_to_save <- subset(phenotype_Data, select = c("ID", "Delta_CT", "ng.g"))
colnames(file_to_save)[colnames(file_to_save) == "ng.g"] ="Alkaloid"
write.table(file_to_save, file = "phenotype_data.txt", row.names = FALSE)
file_to_save$Alkaloid <- round(file_to_save$Alkaloid, 3)
write.table(file_to_save, file = "phenotype_data.txt", row.names = FALSE)
## Making a .bed file
# This bed file is used to create the parameters in which the bam files of the parents is filtered.
prereg_loc = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Hap_Map/hap_map_regions.txt"
prereg <- read.table(prereg_loc, header = FALSE)
prereg$V3 <- prereg$V2 - 1
prereg$V4 <- prereg$V2 + 1
## Making a .bed file
# This bed file is used to create the parameters in which the bam files of the parents is filtered.
prereg_loc = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Hap_Map/hap_map_regions.txt"
prereg <- read.table(prereg_loc, header = FALSE)
prereg$V3 <- prereg$V2 - 1
View(prereg)
prereg <- read.table(prereg_loc, header = TRUE)
prereg$V3 <- prereg$V2 - 1
## Making a .bed file
# This bed file is used to create the parameters in which the bam files of the parents is filtered.
prereg_loc = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Hap_Map/hap_map_regions.txt"
prereg <- read.table(prereg_loc, header = TRUE)
prereg$V3 <- prereg$V2 - 1
## Making a .bed file
# This bed file is used to create the parameters in which the bam files of the parents is filtered.
prereg_loc = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Hap_Map/hap_map_regions.txt"
prereg <- read.table(prereg_loc, header = FALSE)
prereg <- prereg[-1, ]
prereg$V3 <- prereg$V2 - 1
## Making a .bed file
# This bed file is used to create the parameters in which the bam files of the parents is filtered.
prereg_loc = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Hap_Map/hap_map_regions.txt"
prereg <- read.table(prereg_loc, header = FALSE)
prereg <- prereg[-1, ]
prereg$V2 <- as.numeric(prereg$V2)
prereg$V3 <- prereg$V2 - 1
prereg$V4 <- prereg$V2 + 1
prereg <- subset(prereg, select = -c(V2))
write.table(prereg,file = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/VCF/regions_file.bed", sep ="\t", row.names = FALSE, col.names = FALSE)
View(alklaoid)
parents_one_row_loc = "/home/drt06/Documents/Tall_fescue/Mapping_and_QTL/Mapping_and_QTL/Data/Real_Data/Lists/all_used_parents_one_row.csv"
parents_one_row <- read.csv(parents_one_row_loc, header = FALSE, strip.white=TRUE)
parents_one_row %>% count(V1, sort = TRUE)
