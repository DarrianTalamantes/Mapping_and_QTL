Pheno_Graph(Residual_Data_24,"Residual Data of 2024")
#################Function to remove outliars ##################################
remove_outliers <- function(data, stds) {
# Select columns 2, 3, and 4
cols_to_check <- data[, 2:4]
# Calculate the mean and standard deviation for each column
means <- apply(cols_to_check, 2, mean, na.rm = TRUE)
sds <- apply(cols_to_check, 2, sd, na.rm = TRUE)
# Create a logical vector indicating rows within the limits
within_limits <- apply(cols_to_check, 1, function(row) {
# Check for NA in the row
if (any(is.na(row))) {
return(FALSE) # Exclude rows with NA
}
# Check if all columns are within the specified range
all(abs(row - means) <= stds * sds)
})
# Subset data to include only rows that fall within the limits
filtered_data <- data[within_limits, ]
# Gets rid of duplicates
filtered_data <- filtered_data[!duplicated(filtered_data$ID), ]
return(filtered_data)
}
############################## End Function ####################################
Residual_data_avg_outliars_rm <- remove_outliers(Residual_data_avg, 2.5)
Pheno_Graph(Residual_data_avg,"Residual Data of 2023 and 2024 Avaraged" )
Pheno_Graph(Residual_data_avg_outliars_rm,"Residual Data of 2023 and 2024 Avaraged" )
nrow(Residual_data_avg) - nrow(Residual_data_avg_outliars_rm)
Residual_Data_23_outliars_rm <- remove_outliers(Residual_Data_23, 2.5)
Pheno_Graph(Residual_Data_23,"Residual Data of 2023")
Pheno_Graph(Residual_Data_23_outliars_rm,"Residual Data of 2023")
nrow(Residual_Data_23) - nrow(Residual_Data_23_outliars_rm)
Residual_Data_24_outliars_rm <- remove_outliers(Residual_Data_24, 2.5)
Pheno_Graph(Residual_Data_24,"Residual Data of 2024")
Pheno_Graph(Residual_Data_24_outliars_rm,"Residual Data of 2024")
nrow(Residual_Data_24) - nrow(Residual_Data_24_outliars_rm)
write.table(Residual_data_avg_outliars_rm,"/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_data_avg_outliars_rm.txt")
write.table(Residual_Data_23_outliars_rm,"/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm.txt")
write.table(Residual_Data_24_outliars_rm,"/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm.txt")
################################################################################
# Now seperating data to make all crosses.
################################################################################
#Reload Residual Data sets
Residual_data_avg_outliars_rm <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_data_avg_outliars_rm.txt", header = TRUE)
Residual_Data_23_outliars_rm <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm.txt", header = TRUE)
Residual_Data_24_outliars_rm <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm.txt", header = TRUE)
# Loading in lists
list_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/310x314_list.txt")
list_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Lists/Parental_Lists/312x314_list.txt")
list_314x310$V1 <- gsub("_dupped\\.bam", "", list_314x310$V1)  # Remove "_dupped.bam"
list_314x310$V1 <- gsub("-", "_", list_314x310$V1)  # Remove "_dupped.bam"
list_314x312$V1 <- gsub("_dupped\\.bam", "", list_314x312$V1)  # Remove "_dupped.bam"
list_314x312$V1 <- gsub("-", "_", list_314x312$V1)  # Remove "_dupped.bam"
########### Function that subsets residual data frame by list of IDs ###########
residual_subsetter <- function(residual,IDlist){
common_IDs <- intersect(residual$ID, IDlist$V1)
residual_filtered <- residual %>% filter(ID %in% common_IDs)
return(residual_filtered)
}
Residual_data_avg_outliars_rm_314x310 <- residual_subsetter(Residual_data_avg_outliars_rm,list_314x310 )
Residual_data_avg_outliars_rm_314x312 <- residual_subsetter(Residual_data_avg_outliars_rm,list_314x312 )
Residual_Data_23_outliars_rm_314x310 <- residual_subsetter(Residual_Data_23_outliars_rm,list_314x310 )
Residual_Data_23_outliars_rm_314x312 <- residual_subsetter(Residual_Data_23_outliars_rm,list_314x312 )
Residual_Data_24_outliars_rm_314x310 <- residual_subsetter(Residual_Data_24_outliars_rm,list_314x310 )
Residual_Data_24_outliars_rm_314x312 <- residual_subsetter(Residual_Data_24_outliars_rm,list_314x312 )
# All datasets are now complete.
write.table(Residual_data_avg_outliars_rm_314x310,"/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_data_avg_outliars_rm_314x310.txt")
write.table(Residual_data_avg_outliars_rm_314x312,"/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_data_avg_outliars_rm_314x312.txt")
write.table(Residual_Data_23_outliars_rm_314x310,"/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm_314x310.txt")
write.table(Residual_Data_23_outliars_rm_314x312,"/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm_314x312.txt")
write.table(Residual_Data_24_outliars_rm_314x310,"/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm_314x310.txt")
write.table(Residual_Data_24_outliars_rm_314x312,"/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm_314x312.txt")
################################################################################
# Calculating heritability
################################################################################
# Load in all 9 datasets
Residual_data_avg_outliars_rm_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_data_avg_outliars_rm_314x310.txt", header = TRUE)
Residual_data_avg_outliars_rm_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_data_avg_outliars_rm_314x312.txt", header = TRUE)
Residual_data_avg_outliars_rm <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_data_avg_outliars_rm.txt", header = TRUE)
Residual_Data_23_outliars_rm_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm_314x310.txt", header = TRUE)
Residual_Data_23_outliars_rm_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm_314x312.txt", header = TRUE)
Residual_Data_23_outliars_rm <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm.txt", header = TRUE)
Residual_Data_24_outliars_rm_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm_314x310.txt", header = TRUE)
Residual_Data_24_outliars_rm_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm_314x312.txt", header = TRUE)
Residual_Data_24_outliars_rm <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm.txt", header = TRUE)
# Load the VCF file
vcf_data_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/VCF/all_snps_filtered_2.recode.vcf"
vcf_data <- read.vcfR(vcf_data_loc)
geno_matrix <- extract.gt(vcf_data, element = "GT")
geno_matrix <- t(geno_matrix)
################ Functions needed for heritability finding #####################
##### Function to convert genotype into something usable ####
convert_genotypes <- function(geno) {
geno <- gsub("0/0", "0", geno)
geno <- gsub("0/1", "1", geno)
geno <- gsub("1/1", "2", geno)
return(as.numeric(geno))
}
###### Getting Heritabilities function ######
find_heritability <- function(pheno_data, geno_matrix, trait) {
# Ensure both datasets have the same IDs
common_IDs <- intersect(pheno_data$ID, rownames(geno_matrix))
# Subset data to include only common IDs
pheno_data <- pheno_data[pheno_data$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == pheno_data$ID)) {
stop("Row names of geno_data do not match the ID in pheno_data.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
geno_data <- geno_data %>% mutate_all(convert_genotypes)
# Convert geno_data back to matrix for kinship matrix calculation
geno_data <- as.matrix(geno_data)
# Create kinship matrix using Gmatrix function
kinship_matrix <- Gmatrix(SNPmatrix = geno_data, method = "VanRaden")
# Ensure the data is in correct format (pheno_data should have necessary columns)
pheno_data$ID <- as.character(pheno_data$ID)
# Example mixed model for heritability (adjust trait to be a column name)
model <- mmer(fixed = as.formula(paste(trait, "~ 1")),
random = ~ vsr(ID, Gu = kinship_matrix),
rcov = ~ units,
data = pheno_data)
# Summarize model results
model_summary <- summary(model)
varcomp_summary <- model_summary$varcomp
# Extract variance components for heritability calculation
var_ID <- varcomp_summary$VarComp[1]  # Genetic variance
var_residual <- varcomp_summary$VarComp[2]  # Residual variance
# Calculate heritability
heritability <- var_ID / (var_ID + var_residual)
# Return heritability estimate
heritability <- round(heritability, 4)
return(heritability)
}
############################## End Function ####################################
# Calculating Heritability from all data sets
# Both years avaraged, heritabilities
H_avg_310_alk <- find_heritability(Residual_data_avg_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res")
H_avg_312_alk <- find_heritability(Residual_data_avg_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res")
H_avg_star_alk <- find_heritability(Residual_data_avg_outliars_rm, geno_matrix, trait = "Alkaloids_Res")
H_avg_310_ct <- find_heritability(Residual_data_avg_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
H_avg_312_ct <- find_heritability(Residual_data_avg_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
H_avg_star_ct <- find_heritability(Residual_data_avg_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res")
# Just the 2023 heritabilities
H_2023_310_alk <- find_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res")
H_2023_312_alk <- find_heritability(Residual_Data_23_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res")
H_2023_star_alk <- find_heritability(Residual_Data_23_outliars_rm, geno_matrix, trait = "Alkaloids_Res")
# This outputs a 0
H_2023_310_ct <- find_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
H_2023_312_ct <- find_heritability(Residual_Data_23_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
H_2023_star_ct <- find_heritability(Residual_Data_23_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res")
# Just the 2024 Heritabilities
H_2024_310_alk <- find_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res")
H_2024_312_alk <- find_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res")
H_2024_star_alk <- find_heritability(Residual_Data_24_outliars_rm, geno_matrix, trait = "Alkaloids_Res")
H_2024_310_ct <- find_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
H_2024_312_ct <- find_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
H_2024_star_ct <- find_heritability(Residual_Data_24_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res")
# Ensure both datasets have the same IDs
common_IDs <- intersect(Residual_Data_24_outliars_rm_314x312$ID, rownames(geno_matrix))
# Subset data to include only common IDs
Residual_Data_24_outliars_rm_314x312 <- Residual_Data_24_outliars_rm_314x312[Residual_Data_24_outliars_rm_314x312$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == Residual_Data_24_outliars_rm_314x312$ID)) {
stop("Row names of geno_data do not match the ID in Residual_Data_24_outliars_rm_314x312.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
geno_data <- geno_data %>% mutate_all(convert_genotypes)
# Convert geno_data back to matrix for kinship matrix calculation
geno_data <- as.matrix(geno_data)
# Create kinship matrix using Gmatrix function
kinship_matrix <- Gmatrix(SNPmatrix = geno_data, method = "VanRaden")
# Ensure the data is in correct format (Residual_Data_24_outliars_rm_314x312 should have necessary columns)
Residual_Data_24_outliars_rm_314x312$ID <- as.character(Residual_Data_24_outliars_rm_314x312$ID)
# Example mixed model for heritability (adjust trait to be a column name)
model <- mmer(fixed = as.formula(paste("Alkaloids_Res", "~ 1")),
random = ~ vsr(ID, Gu = kinship_matrix),
rcov = ~ units,
data = Residual_Data_24_outliars_rm_314x312)
# Summarize model results
model_summary <- summary(model)
varcomp_summary <- model_summary$varcomp
model_summary
varcomp_summary
# Extract variance components for heritability calculation
var_ID <- varcomp_summary$VarComp[1]  # Genetic variance
var_residual <- varcomp_summary$VarComp[2]  # Residual variance
var_residual
var_ID
summary(Residual_Data_24_outliars_rm_314x312$Alkaloids_Res)
head(Residual_Data_24_outliars_rm_314x312$Alkaloids_Res)
summary(model)
common_IDs
length(common_IDs)
model$n
model_summary$n
str(model)
summary(model)
model_summary$groups
model_summary$groups[1]
explore_heritability <- function(pheno_data, geno_matrix, trait) {
# Ensure both datasets have the same IDs
common_IDs <- intersect(pheno_data$ID, rownames(geno_matrix))
# Subset data to include only common IDs
pheno_data <- pheno_data[pheno_data$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == pheno_data$ID)) {
stop("Row names of geno_data do not match the ID in pheno_data.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
geno_data <- geno_data %>% mutate_all(convert_genotypes)
# Convert geno_data back to matrix for kinship matrix calculation
geno_data <- as.matrix(geno_data)
# Create kinship matrix using Gmatrix function
kinship_matrix <- Gmatrix(SNPmatrix = geno_data, method = "VanRaden")
# Ensure the data is in correct format (pheno_data should have necessary columns)
pheno_data$ID <- as.character(pheno_data$ID)
# Example mixed model for heritability (adjust trait to be a column name)
model <- mmer(fixed = as.formula(paste(trait, "~ 1")),
random = ~ vsr(ID, Gu = kinship_matrix),
rcov = ~ units,
data = pheno_data)
# Summarize model results
model_summary <- summary(model)
varcomp_summary <- model_summary$varcomp
# Extract variance components for heritability calculation
var_ID <- varcomp_summary$VarComp[1]  # Genetic variance
var_residual <- varcomp_summary$VarComp[2]  # Residual variance
# Calculate heritability
heritability <- var_ID / (var_ID + var_residual)
# Return heritability estimate
heritability <- round(heritability, 4)
#Making results table
resultstable <- list()
resultstable$H <- heritability
resultstable$GeneticVar <- var_ID
resultstable$ResidualVar <- var_residual
resultstable$N <- model_summary$groups[1]
return(resultstable)
}
explore_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
H_2024_312_ct
H_2024_312_alk
H_avg_310_ct
H_2024_310_ct
H_2023_310_ct
stats_24_312_CT <- explore_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
stats_24_312_Alk <- explore_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res")
stats_23_310_CT <- explore_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
Residual_Data_23_outliars_rm_314x310
stats_24_312_CT
stats_24_312_Alk
stats_23_310_CT
Residual_Data_23_outliars_rm_314x310
# Ensure both datasets have the same IDs
common_IDs <- intersect(Residual_Data_23_outliars_rm_314x310$ID, rownames(geno_matrix))
# Subset data to include only common IDs
Residual_Data_23_outliars_rm_314x310 <- Residual_Data_23_outliars_rm_314x310[Residual_Data_23_outliars_rm_314x310$ID %in% common_IDs, ]
common_IDs
Residual_Data_23_outliars_rm_314x310
Residual_Data_24_outliars_rm_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm_314x312.txt", header = TRUE)
Residual_Data_23_outliars_rm_314x310
Residual_Data_24_outliars_rm_314x312 <- residual_subsetter(Residual_Data_24_outliars_rm,list_314x312 )
Residual_Data_24_outliars_rm_314x312
write.table(Residual_Data_24_outliars_rm_314x312,"/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm_314x312.txt")
Residual_Data_24_outliars_rm_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm_314x312.txt", header = TRUE)
Residual_Data_24_outliars_rm_314x312
Residual_Data_24_outliars_rm_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm_314x312.txt", header = TRUE)
Residual_Data_24_outliars_rm_314x312
stats_24_312_CT <- explore_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
stats_23_310_CT
stats_23_310_CT <- explore_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
Residual_Data_23_outliars_rm_314x310
Residual_Data_23_outliars_rm_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm_314x310.txt", header = TRUE)
Residual_Data_23_outliars_rm_314x310
Residual_Data_23_outliars_rm_314x310
# Ensure both datasets have the same IDs
common_IDs <- intersect(Residual_Data_23_outliars_rm_314x310$ID, rownames(geno_matrix))
# Subset data to include only common IDs
Residual_Data_23_outliars_rm_314x310 <- Residual_Data_23_outliars_rm_314x310[Residual_Data_23_outliars_rm_314x310$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == Residual_Data_23_outliars_rm_314x310$ID)) {
stop("Row names of geno_data do not match the ID in Residual_Data_23_outliars_rm_314x310.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
common_IDs
Residual_Data_23_outliars_rm_314x310
Residual_Data_23_outliars_rm_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm_314x310.txt", header = TRUE)
Residual_Data_23_outliars_rm_314x310
# Ensure both datasets have the same IDs
common_IDs <- intersect(Residual_Data_23_outliars_rm_314x310$ID, rownames(geno_matrix))
common_IDs
Residual_Data_23_outliars_rm_314x310
rownames(geno_matrix)
# Load the VCF file
vcf_data_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/VCF/all_snps_filtered_2.recode.vcf"
vcf_data <- read.vcfR(vcf_data_loc)
geno_matrix <- extract.gt(vcf_data, element = "GT")
geno_matrix <- t(geno_matrix)
# Ensure both datasets have the same IDs
common_IDs <- intersect(Residual_Data_23_outliars_rm_314x310$ID, rownames(geno_matrix))
common_IDs
# Subset data to include only common IDs
Residual_Data_23_outliars_rm_314x310 <- Residual_Data_23_outliars_rm_314x310[Residual_Data_23_outliars_rm_314x310$ID %in% common_IDs, ]
Residual_Data_23_outliars_rm_314x310
# Check if row names match
if (!all(rownames(geno_matrix) == Residual_Data_23_outliars_rm_314x310$ID)) {
stop("Row names of geno_data do not match the ID in Residual_Data_23_outliars_rm_314x310.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
# Check if row names match
if (!all(rownames(geno_matrix) == Residual_Data_23_outliars_rm_314x310$ID)) {
stop("Row names of geno_data do not match the ID in Residual_Data_23_outliars_rm_314x310.")
}
Residual_Data_23_outliars_rm_314x310
# Ensure both datasets have the same IDs
common_IDs <- intersect(Residual_Data_23_outliars_rm_314x310$ID, rownames(geno_matrix))
# Subset data to include only common IDs
Residual_Data_23_outliars_rm_314x310 <- Residual_Data_23_outliars_rm_314x310[Residual_Data_23_outliars_rm_314x310$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == Residual_Data_23_outliars_rm_314x310$ID)) {
stop("Row names of geno_data do not match the ID in Residual_Data_23_outliars_rm_314x310.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
geno_data <- geno_data %>% mutate_all(convert_genotypes)
# Convert geno_data back to matrix for kinship matrix calculation
geno_data <- as.matrix(geno_data)
# Create kinship matrix using Gmatrix function
kinship_matrix <- Gmatrix(SNPmatrix = geno_data, method = "VanRaden")
# Ensure the data is in correct format (Residual_Data_23_outliars_rm_314x310 should have necessary columns)
Residual_Data_23_outliars_rm_314x310$ID <- as.character(Residual_Data_23_outliars_rm_314x310$ID)
# Example mixed model for heritability (adjust trait to be a column name)
model <- mmer(fixed = as.formula(paste("Alkaloids_Res", "~ 1")),
random = ~ vsr(ID, Gu = kinship_matrix),
rcov = ~ units,
data = Residual_Data_23_outliars_rm_314x310)
# Summarize model results
model_summary <- summary(model)
varcomp_summary <- model_summary$varcomp
# Extract variance components for heritability calculation
var_ID <- varcomp_summary$VarComp[1]  # Genetic variance
var_residual <- varcomp_summary$VarComp[2]  # Residual variance
# Calculate heritability
heritability <- var_ID / (var_ID + var_residual)
heritability
stats_23_310_CT <- explore_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
stats_23_310_CT
heritability
# Load in all 9 datasets
Residual_data_avg_outliars_rm_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_data_avg_outliars_rm_314x310.txt", header = TRUE)
Residual_data_avg_outliars_rm_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_data_avg_outliars_rm_314x312.txt", header = TRUE)
Residual_data_avg_outliars_rm <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_data_avg_outliars_rm.txt", header = TRUE)
Residual_Data_23_outliars_rm_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm_314x310.txt", header = TRUE)
Residual_Data_23_outliars_rm_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm_314x312.txt", header = TRUE)
Residual_Data_23_outliars_rm <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_23_outliars_rm.txt", header = TRUE)
Residual_Data_24_outliars_rm_314x310 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm_314x310.txt", header = TRUE)
Residual_Data_24_outliars_rm_314x312 <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm_314x312.txt", header = TRUE)
Residual_Data_24_outliars_rm <- read.table("/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/Phenotype_Data/Residual_Data/Residual_Data_24_outliars_rm.txt", header = TRUE)
# Load the VCF file
vcf_data_loc <- "/home/darrian/Desktop/UGA/Wallace_Lab/Mapping_and_QTL/Data/VCF/all_snps_filtered_2.recode.vcf"
vcf_data <- read.vcfR(vcf_data_loc)
geno_matrix <- extract.gt(vcf_data, element = "GT")
geno_matrix <- t(geno_matrix)
################ Functions needed for heritability finding #####################
##### Function to convert genotype into something usable ####
convert_genotypes <- function(geno) {
geno <- gsub("0/0", "0", geno)
geno <- gsub("0/1", "1", geno)
geno <- gsub("1/1", "2", geno)
return(as.numeric(geno))
}
###### Getting Heritabilities function ######
find_heritability <- function(pheno_data, geno_matrix, trait) {
# Ensure both datasets have the same IDs
common_IDs <- intersect(pheno_data$ID, rownames(geno_matrix))
# Subset data to include only common IDs
pheno_data <- pheno_data[pheno_data$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == pheno_data$ID)) {
stop("Row names of geno_data do not match the ID in pheno_data.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
geno_data <- geno_data %>% mutate_all(convert_genotypes)
# Convert geno_data back to matrix for kinship matrix calculation
geno_data <- as.matrix(geno_data)
# Create kinship matrix using Gmatrix function
kinship_matrix <- Gmatrix(SNPmatrix = geno_data, method = "VanRaden")
# Ensure the data is in correct format (pheno_data should have necessary columns)
pheno_data$ID <- as.character(pheno_data$ID)
# Example mixed model for heritability (adjust trait to be a column name)
model <- mmer(fixed = as.formula(paste(trait, "~ 1")),
random = ~ vsr(ID, Gu = kinship_matrix),
rcov = ~ units,
data = pheno_data)
# Summarize model results
model_summary <- summary(model)
varcomp_summary <- model_summary$varcomp
# Extract variance components for heritability calculation
var_ID <- varcomp_summary$VarComp[1]  # Genetic variance
var_residual <- varcomp_summary$VarComp[2]  # Residual variance
# Calculate heritability
heritability <- var_ID / (var_ID + var_residual)
# Return heritability estimate
heritability <- round(heritability, 4)
return(heritability)
}
############################## End Function ####################################
# Calculating Heritability from all data sets
# Both years avaraged, heritabilities
H_avg_310_alk <- find_heritability(Residual_data_avg_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res")
H_avg_312_alk <- find_heritability(Residual_data_avg_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res")
H_avg_star_alk <- find_heritability(Residual_data_avg_outliars_rm, geno_matrix, trait = "Alkaloids_Res")
H_avg_310_ct <- find_heritability(Residual_data_avg_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
H_avg_312_ct <- find_heritability(Residual_data_avg_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
H_avg_star_ct <- find_heritability(Residual_data_avg_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res")
# Just the 2023 heritabilities
H_2023_310_alk <- find_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res")
H_2023_312_alk <- find_heritability(Residual_Data_23_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res")
H_2023_star_alk <- find_heritability(Residual_Data_23_outliars_rm, geno_matrix, trait = "Alkaloids_Res")
H_2023_310_ct <- find_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
H_2023_312_ct <- find_heritability(Residual_Data_23_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
H_2023_star_ct <- find_heritability(Residual_Data_23_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res")
# Just the 2024 Heritabilities
H_2024_310_alk <- find_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res")
H_2024_312_alk <- find_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res")
H_2024_star_alk <- find_heritability(Residual_Data_24_outliars_rm, geno_matrix, trait = "Alkaloids_Res")
H_2024_310_ct <- find_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
H_2024_312_ct <- find_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
H_2024_star_ct <- find_heritability(Residual_Data_24_outliars_rm, geno_matrix, trait = "Delta_CT_adj_Res")
stats_23_310_CT <- explore_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
stats_23_310_CT
stats_24_312_CT <- explore_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
stats_24_312_Alk <- explore_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res")
#abserdley high
stats_24_310_CT <- explore_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
stats_24_312_CT
stats_24_312_Alk
stats_23_310_CT
stats_24_310_CT
stats_24_312_CT
stats_24_312_Alk
stats_23_310_CT
stats_24_310_CT
library(data.table)
explore_heritability <- function(pheno_data, geno_matrix, trait) {
# Ensure both datasets have the same IDs
common_IDs <- intersect(pheno_data$ID, rownames(geno_matrix))
# Subset data to include only common IDs
pheno_data <- pheno_data[pheno_data$ID %in% common_IDs, ]
geno_matrix <- geno_matrix[common_IDs, ]
# Check if row names match
if (!all(rownames(geno_matrix) == pheno_data$ID)) {
stop("Row names of geno_data do not match the ID in pheno_data.")
}
# Convert geno_matrix to data frame, and then convert genotypes
geno_data <- as.data.frame(geno_matrix)
geno_data <- geno_data %>% mutate_all(convert_genotypes)
# Convert geno_data back to matrix for kinship matrix calculation
geno_data <- as.matrix(geno_data)
# Create kinship matrix using Gmatrix function
kinship_matrix <- Gmatrix(SNPmatrix = geno_data, method = "VanRaden")
# Ensure the data is in correct format (pheno_data should have necessary columns)
pheno_data$ID <- as.character(pheno_data$ID)
# Example mixed model for heritability (adjust trait to be a column name)
model <- mmer(fixed = as.formula(paste(trait, "~ 1")),
random = ~ vsr(ID, Gu = kinship_matrix),
rcov = ~ units,
data = pheno_data)
# Summarize model results
model_summary <- summary(model)
varcomp_summary <- model_summary$varcomp
# Extract variance components for heritability calculation
var_ID <- varcomp_summary$VarComp[1]  # Genetic variance
var_residual <- varcomp_summary$VarComp[2]  # Residual variance
# Calculate heritability
heritability <- var_ID / (var_ID + var_residual)
# Return heritability estimate
heritability <- round(heritability, 4)
#Making results table
resultstable <- data.table(
H = heritability,
GeneticVar = var_ID,
ResidualVar = var_residual,
N = model_summary$groups[1]
)
return(resultstable)
}
# Heritability is 0
stats_24_312_CT <- explore_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Delta_CT_adj_Res")
stats_24_312_Alk <- explore_heritability(Residual_Data_24_outliars_rm_314x312, geno_matrix, trait = "Alkaloids_Res")
stats_23_310_CT <- explore_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
#abserdley high
stats_24_310_CT <- explore_heritability(Residual_Data_24_outliars_rm_314x310, geno_matrix, trait = "Delta_CT_adj_Res")
stats_24_312_CT
stats_24_312_Alk
stats_23_310_CT
stats_24_310_CT
stats_24_310_CT$H[1]
# Just the 2023 heritabilities
stats_2023_310_alk <- find_heritability(Residual_Data_23_outliars_rm_314x310, geno_matrix, trait = "Alkaloids_Res")
